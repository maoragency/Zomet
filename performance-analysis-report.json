{
  "bundleAnalysis": {
    "totalSize": 2731128,
    "gzippedSize": 819338,
    "brotliSize": 682782,
    "largestChunks": [
      {
        "name": "chunks\\react-vendor-KdPjFd_W.js",
        "size": 304121,
        "gzippedSize": 91236,
        "brotliSize": 76030,
        "type": "vendor",
        "isAsync": false,
        "isVendor": true
      },
      {
        "name": "chunks\\admin-dashboard-BF7L7uqb.js",
        "size": 136636,
        "gzippedSize": 40991,
        "brotliSize": 34159,
        "type": "admin",
        "isAsync": false,
        "isVendor": false
      },
      {
        "name": "chunks\\supabase-DsgIaK2E.js",
        "size": 121097,
        "gzippedSize": 36329,
        "brotliSize": 30274,
        "type": "supabase",
        "isAsync": false,
        "isVendor": false
      },
      {
        "name": "chunks\\user-dashboard-Bqqj6ZN4.js",
        "size": 76753,
        "gzippedSize": 23026,
        "brotliSize": 19188,
        "type": "user",
        "isAsync": false,
        "isVendor": false
      },
      {
        "name": "assets\\index-DM7CBfW6.js",
        "size": 64231,
        "gzippedSize": 19269,
        "brotliSize": 16058,
        "type": "app",
        "isAsync": false,
        "isVendor": false
      },
      {
        "name": "chunks\\utils-ToFN1SrW.js",
        "size": 56378,
        "gzippedSize": 16913,
        "brotliSize": 14095,
        "type": "utils",
        "isAsync": false,
        "isVendor": false
      },
      {
        "name": "chunks\\services-BlpOvJkQ.js",
        "size": 55802,
        "gzippedSize": 16741,
        "brotliSize": 13951,
        "type": "app",
        "isAsync": false,
        "isVendor": false
      },
      {
        "name": "chunks\\auth-DZ5LzWNE.js",
        "size": 48825,
        "gzippedSize": 14648,
        "brotliSize": 12206,
        "type": "auth",
        "isAsync": false,
        "isVendor": false
      },
      {
        "name": "chunks\\Home-BuXFmxTW.js",
        "size": 37958,
        "gzippedSize": 11387,
        "brotliSize": 9490,
        "type": "app",
        "isAsync": false,
        "isVendor": false
      },
      {
        "name": "chunks\\vendor-Dz3veIGz.js",
        "size": 27632,
        "gzippedSize": 8290,
        "brotliSize": 6908,
        "type": "vendor",
        "isAsync": false,
        "isVendor": true
      }
    ],
    "duplicatedDependencies": [
      {
        "package": "@radix-ui/react-accordion",
        "similar": [
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-alert-dialog",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-aspect-ratio",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-avatar",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-checkbox",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-collapsible",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-context-menu",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-dialog",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-dropdown-menu",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-hover-card",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-label",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-menubar",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-navigation-menu",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-popover",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-progress",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-radio-group",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-scroll-area",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-select",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-separator",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-slider",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-slot",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-switch",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-tabs",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-toggle",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-toggle-group",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-tooltip",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "@radix-ui/react-tooltip",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "embla-carousel-react",
        "similar": [
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "lucide-react",
        "similar": [
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "react",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "embla-carousel-react",
          "lucide-react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "react-day-picker",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "embla-carousel-react",
          "lucide-react",
          "react",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "react-dom",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "embla-carousel-react",
          "lucide-react",
          "react",
          "react-day-picker",
          "react-hook-form",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "react-hook-form",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "embla-carousel-react",
          "lucide-react",
          "react",
          "react-day-picker",
          "react-dom",
          "react-resizable-panels",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "react-resizable-panels",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "embla-carousel-react",
          "lucide-react",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-router-dom"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "react-router-dom",
        "similar": [
          "@radix-ui/react-accordion",
          "@radix-ui/react-alert-dialog",
          "@radix-ui/react-aspect-ratio",
          "@radix-ui/react-avatar",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-collapsible",
          "@radix-ui/react-context-menu",
          "@radix-ui/react-dialog",
          "@radix-ui/react-dropdown-menu",
          "@radix-ui/react-hover-card",
          "@radix-ui/react-label",
          "@radix-ui/react-menubar",
          "@radix-ui/react-navigation-menu",
          "@radix-ui/react-popover",
          "@radix-ui/react-progress",
          "@radix-ui/react-radio-group",
          "@radix-ui/react-scroll-area",
          "@radix-ui/react-select",
          "@radix-ui/react-separator",
          "@radix-ui/react-slider",
          "@radix-ui/react-slot",
          "@radix-ui/react-switch",
          "@radix-ui/react-tabs",
          "@radix-ui/react-toggle",
          "@radix-ui/react-toggle-group",
          "@radix-ui/react-tooltip",
          "embla-carousel-react",
          "lucide-react",
          "react",
          "react-day-picker",
          "react-dom",
          "react-hook-form",
          "react-resizable-panels"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "tailwind-merge",
        "similar": [
          "tailwindcss-animate"
        ],
        "reason": "Similar package names detected"
      },
      {
        "package": "tailwindcss-animate",
        "similar": [
          "tailwind-merge"
        ],
        "reason": "Similar package names detected"
      }
    ],
    "unusedDependencies": [],
    "chunkAnalysis": {
      "vendor": [
        {
          "name": "chunks\\react-vendor-KdPjFd_W.js",
          "size": 304121,
          "gzippedSize": 91236,
          "brotliSize": 76030,
          "type": "vendor",
          "isAsync": false,
          "isVendor": true
        },
        {
          "name": "chunks\\vendor-Dz3veIGz.js",
          "size": 27632,
          "gzippedSize": 8290,
          "brotliSize": 6908,
          "type": "vendor",
          "isAsync": false,
          "isVendor": true
        }
      ],
      "app": [
        {
          "name": "assets\\index-DM7CBfW6.js",
          "size": 64231,
          "gzippedSize": 19269,
          "brotliSize": 16058,
          "type": "app",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\AddVehicle-DkdwNSK0.js",
          "size": 19384,
          "gzippedSize": 5815,
          "brotliSize": 4846,
          "type": "app",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\admin-dashboard-BF7L7uqb.js",
          "size": 136636,
          "gzippedSize": 40991,
          "brotliSize": 34159,
          "type": "admin",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\auth-DZ5LzWNE.js",
          "size": 48825,
          "gzippedSize": 14648,
          "brotliSize": 12206,
          "type": "auth",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\BuyerRequest-7Q_iSMSb.js",
          "size": 9875,
          "gzippedSize": 2963,
          "brotliSize": 2469,
          "type": "app",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\Checkout-DcdWSW3k.js",
          "size": 9645,
          "gzippedSize": 2894,
          "brotliSize": 2411,
          "type": "app",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\Contact-Bl03WISq.js",
          "size": 7541,
          "gzippedSize": 2262,
          "brotliSize": 1885,
          "type": "app",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\entities-QXodRtFG.js",
          "size": 1806,
          "gzippedSize": 542,
          "brotliSize": 452,
          "type": "app",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\Financing-hzFVm7EV.js",
          "size": 3455,
          "gzippedSize": 1037,
          "brotliSize": 864,
          "type": "app",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\FinancingAndInsurance-Bc7WwFFJ.js",
          "size": 4984,
          "gzippedSize": 1495,
          "brotliSize": 1246,
          "type": "app",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\Home-BuXFmxTW.js",
          "size": 37958,
          "gzippedSize": 11387,
          "brotliSize": 9490,
          "type": "app",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\Insurance-CSuNP0p3.js",
          "size": 4718,
          "gzippedSize": 1415,
          "brotliSize": 1180,
          "type": "app",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\integrations-D-vIoNWb.js",
          "size": 7669,
          "gzippedSize": 2301,
          "brotliSize": 1917,
          "type": "app",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\MyListings-U-3Aim73.js",
          "size": 4911,
          "gzippedSize": 1473,
          "brotliSize": 1228,
          "type": "app",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\PaymentSuccess-B89Gho6D.js",
          "size": 6500,
          "gzippedSize": 1950,
          "brotliSize": 1625,
          "type": "app",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\Pricing-D-ZCpDFN.js",
          "size": 4067,
          "gzippedSize": 1220,
          "brotliSize": 1017,
          "type": "app",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\radix-ui-ByoYm48K.js",
          "size": 199,
          "gzippedSize": 60,
          "brotliSize": 50,
          "type": "ui-library",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\services-BlpOvJkQ.js",
          "size": 55802,
          "gzippedSize": 16741,
          "brotliSize": 13951,
          "type": "app",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\supabase-DsgIaK2E.js",
          "size": 121097,
          "gzippedSize": 36329,
          "brotliSize": 30274,
          "type": "supabase",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\useNavigation-DVDPjhaX.js",
          "size": 1022,
          "gzippedSize": 307,
          "brotliSize": 256,
          "type": "app",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\user-dashboard-Bqqj6ZN4.js",
          "size": 76753,
          "gzippedSize": 23026,
          "brotliSize": 19188,
          "type": "user",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\utils-ToFN1SrW.js",
          "size": 56378,
          "gzippedSize": 16913,
          "brotliSize": 14095,
          "type": "utils",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\VehicleDetails-B3Kkwi9V.js",
          "size": 8345,
          "gzippedSize": 2504,
          "brotliSize": 2086,
          "type": "app",
          "isAsync": false,
          "isVendor": false
        },
        {
          "name": "chunks\\VehiclePricing-DqEa1gfw.js",
          "size": 10561,
          "gzippedSize": 3168,
          "brotliSize": 2640,
          "type": "app",
          "isAsync": false,
          "isVendor": false
        }
      ],
      "async": []
    },
    "treeshakingOpportunities": []
  },
  "coreWebVitals": {
    "lcp": 1500,
    "fid": 3650,
    "cls": 0.05,
    "fcp": 1208,
    "ttfb": 200,
    "estimated": true,
    "score": 70
  },
  "reactPerformance": {
    "slowComponents": [
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "lines": 319,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityPanel.jsx",
        "lines": 317,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityTester.jsx",
        "lines": 527,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityToggle.jsx",
        "lines": 538,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\accessibility\\AccessibleForm.jsx",
        "lines": 330,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "lines": 769,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\AdvancedSearch.jsx",
        "lines": 520,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\auth\\SecurityDashboard.jsx",
        "lines": 334,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\dashboard\\RealTimeActivityFeed.jsx",
        "lines": 375,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\dashboard\\RealTimeStatistics.jsx",
        "lines": 408,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\ErrorBoundary.jsx",
        "lines": 323,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\ErrorNotification.jsx",
        "lines": 310,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\examples\\FileUploadExample.jsx",
        "lines": 370,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\forms\\ValidatedForm.jsx",
        "lines": 483,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\forms\\ValidatedInput.jsx",
        "lines": 543,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\messaging\\RealTimeMessaging.jsx",
        "lines": 463,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\notifications\\NotificationPreferences.jsx",
        "lines": 477,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\notifications\\RealTimeNotifications.jsx",
        "lines": 524,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\search\\BasicSearch.jsx",
        "lines": 414,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\security\\AccessControl.jsx",
        "lines": 427,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\security\\SecurityMonitor.jsx",
        "lines": 683,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\ui\\chart.jsx",
        "lines": 310,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\ui\\ImageUpload.jsx",
        "lines": 370,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "lines": 620,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\contexts\\AccessibilityContext.jsx",
        "lines": 396,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "lines": 715,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\hooks\\__tests__\\useAuth.test.jsx",
        "lines": 433,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\AddVehicle.jsx",
        "lines": 834,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\admin\\AdminDashboard.jsx",
        "lines": 995,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\admin\\AdminLayout.jsx",
        "lines": 979,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\admin\\Analytics.jsx",
        "lines": 1116,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\admin\\SystemManagement.jsx",
        "lines": 583,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\admin\\UsersManagement.jsx",
        "lines": 818,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\admin\\VehiclesManagement.jsx",
        "lines": 1013,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\auth\\ForgotPassword.jsx",
        "lines": 336,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\auth\\Login.jsx",
        "lines": 340,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\auth\\ResetPassword.jsx",
        "lines": 426,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\auth\\Signup.jsx",
        "lines": 468,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\BuyerRequest.jsx",
        "lines": 313,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\Checkout.jsx",
        "lines": 397,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminAdManagementPage.jsx",
        "lines": 730,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminAnalyticsPage.jsx",
        "lines": 729,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminDashboardLayout.jsx",
        "lines": 465,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminHomePage.jsx",
        "lines": 952,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminVehicleManagementPage.jsx",
        "lines": 603,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AuditLogsPage.jsx",
        "lines": 746,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\PromotionManagementPage.jsx",
        "lines": 905,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\SystemSettingsPage.jsx",
        "lines": 557,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\UserManagementPage.jsx",
        "lines": 897,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\user\\ActivityPage.jsx",
        "lines": 478,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\user\\AdManagementPage.jsx",
        "lines": 606,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\user\\AnalyticsPage.jsx",
        "lines": 606,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\user\\DashboardHome.jsx",
        "lines": 347,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\user\\MessagingPage.jsx",
        "lines": 702,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\user\\ProfilePage.jsx",
        "lines": 669,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\Home.jsx",
        "lines": 411,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\Layout.jsx",
        "lines": 340,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\VehicleDetails.jsx",
        "lines": 376,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\pages\\VehiclePricing.jsx",
        "lines": 361,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\test\\accessibility\\FloatingAccessibilityButton.test.jsx",
        "lines": 391,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\test\\integration\\admin-operations-integration.test.jsx",
        "lines": 798,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\test\\integration\\auth-integration.test.jsx",
        "lines": 508,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\test\\integration\\dashboard-integration.test.jsx",
        "lines": 636,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\test\\integration\\realtime-integration.test.jsx",
        "lines": 587,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\test\\performance\\load-tests.test.jsx",
        "lines": 567,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      },
      {
        "file": "src\\test\\security\\security-tests.test.jsx",
        "lines": 552,
        "reason": "Large component file may impact performance",
        "recommendation": "Consider breaking into smaller components"
      }
    ],
    "unnecessaryRerenders": [
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 8,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 9,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityPanel.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 19,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityTester.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 14,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 14,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityToggle.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 80,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 18,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\components\\accessibility\\AccessibleButton.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 9,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\accessibility\\AccessibleForm.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 26,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 58,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "inlineArrays",
            "count": 3,
            "description": "Multiple inline array creations may cause re-renders",
            "fix": "Move array creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\accessibility\\LiveRegion.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 12,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\accessibility\\SkipLinks.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 10,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\AdvancedSearch.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 55,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "inlineArrays",
            "count": 12,
            "description": "Multiple inline array creations may cause re-renders",
            "fix": "Move array creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\auth\\AnimatedButton.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 7,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\auth\\AuthBackground.jsx",
        "issues": [
          {
            "type": "anonymousFunctions",
            "count": 6,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\components\\auth\\AuthGuard.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 4,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\auth\\PasswordStrengthIndicator.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 8,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\auth\\SecurityDashboard.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 9,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 6,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\components\\dashboard\\RealTimeActivityFeed.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 16,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\dashboard\\RealTimeStatistics.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 10,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ErrorBoundary.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 11,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 7,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\components\\ErrorNotification.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 14,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 13,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\components\\examples\\FileUploadExample.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 28,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\forms\\ValidatedForm.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 36,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 8,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\components\\forms\\ValidatedInput.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 41,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 8,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\components\\messaging\\RealTimeMessaging.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 22,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 6,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\components\\navigation\\SafeLink.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 5,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\notifications\\NotificationPreferences.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 31,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\notifications\\RealTimeNotifications.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 14,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 12,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\components\\search\\BasicSearch.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 30,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "inlineArrays",
            "count": 6,
            "description": "Multiple inline array creations may cause re-renders",
            "fix": "Move array creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\security\\AccessControl.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 8,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 12,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\components\\security\\SecurityMonitor.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 29,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "inlineArrays",
            "count": 5,
            "description": "Multiple inline array creations may cause re-renders",
            "fix": "Move array creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 12,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\accordion.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 6,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\alert-dialog.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 14,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\alert.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 6,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\avatar.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 6,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\breadcrumb.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 11,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\calendar.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 6,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\card.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 12,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\carousel.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 21,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\chart.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 22,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\command.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 14,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\context-menu.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 18,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\dialog.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 10,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\drawer.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 11,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\dropdown-menu.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 19,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\form.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 17,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\hover-card.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 4,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\ImageUpload.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 23,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\input-otp.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 8,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 25,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\navigation-menu.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 13,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\pagination.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 10,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\popover.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 4,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\radio-group.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 4,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\scroll-area.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 5,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\select.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 16,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\separator.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 4,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\sheet.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 10,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 69,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\table.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 16,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\tabs.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 6,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\toast.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 12,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\toggle-group.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 5,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\VehicleCard.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 10,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\contexts\\AccessibilityContext.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 5,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 4,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\hooks\\__tests__\\useAuth.test.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 6,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\AddVehicle.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 58,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 7,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\pages\\admin\\AdminDashboard.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 30,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 13,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\pages\\admin\\AdminLayout.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 32,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 6,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\pages\\admin\\Analytics.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 38,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\admin\\SystemManagement.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 15,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 7,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\pages\\admin\\UsersManagement.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 35,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\admin\\VehiclesManagement.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 46,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\auth\\ForgotPassword.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 10,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\auth\\Login.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 14,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\auth\\ResetPassword.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 22,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\auth\\Signup.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 25,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\BuyerRequest.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 24,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\Checkout.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 15,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\Contact.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 16,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminAdManagementPage.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 69,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 13,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminAnalyticsPage.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 23,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminDashboardLayout.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 37,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminHomePage.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 21,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminVehicleManagementPage.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 23,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AuditLogsPage.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 32,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "inlineArrays",
            "count": 4,
            "description": "Multiple inline array creations may cause re-renders",
            "fix": "Move array creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 9,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\admin\\PromotionManagementPage.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 57,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 19,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\admin\\SystemSettingsPage.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 45,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\admin\\UserManagementPage.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 35,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\user\\ActivityPage.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 19,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\user\\AdManagementPage.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 29,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\user\\AnalyticsPage.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 16,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\user\\DashboardHome.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 4,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\user\\DashboardLayout.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 14,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\user\\MessagingPage.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 35,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\user\\ProfilePage.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 42,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\Financing.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 9,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\FinancingAndInsurance.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 9,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\Home.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 34,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\index.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 53,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\Layout.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 16,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\MyListings.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 15,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\PaymentSuccess.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 6,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\Pricing.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 5,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\VehicleDetails.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 18,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 6,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      },
      {
        "file": "src\\pages\\VehiclePricing.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 20,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\test\\accessibility\\FloatingAccessibilityButton.test.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 7,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\test\\integration\\admin-operations-integration.test.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 4,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "inlineArrays",
            "count": 13,
            "description": "Multiple inline array creations may cause re-renders",
            "fix": "Move array creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\test\\integration\\dashboard-integration.test.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 11,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "inlineArrays",
            "count": 9,
            "description": "Multiple inline array creations may cause re-renders",
            "fix": "Move array creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\test\\integration\\realtime-integration.test.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 12,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          }
        ]
      },
      {
        "file": "src\\test\\utils.jsx",
        "issues": [
          {
            "type": "inlineObjects",
            "count": 8,
            "description": "Multiple inline object creations may cause re-renders",
            "fix": "Move object creation outside render or use useMemo"
          },
          {
            "type": "anonymousFunctions",
            "count": 9,
            "description": "Many anonymous functions may cause re-renders",
            "fix": "Use useCallback or define functions outside render"
          }
        ]
      }
    ],
    "antiPatterns": [
      {
        "file": "src\\App.jsx",
        "line": 18,
        "code": "useEffect(() => {\n    initializeAccessibility()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 14,
        "code": "useEffect(() => {\r\n    if (!magnifier) return;\r\n\r\n    const handleMouseMove = (e)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 44,
        "code": "useEffect(() => {\r\n    if (!readingGuide) return;\r\n\r\n    const handleMouseMove = (e) => {\r\n      setPosition(e.clientY)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 78,
        "code": "useEffect(() => {\r\n    if (!voiceNavigation || !('webkitSpeechRecognition' in window)) return;\r\n\r\n    const recognition = new window.webkitSpeechRecognition();\r\n    recognition.continuous = true;\r\n    recognition.interimResults = true;\r\n    recognition.lang = 'he-IL';\r\n\r\n    recognition.onstart = () => setIsListening(true);\r\n    recognition.onend = () => setIsListening(false);\r\n\r\n    recognition.onresult = (event) => {\r\n      const transcript = event.results[event.results.length - 1][0].transcript;\r\n      setCommand(transcript);\r\n      \r\n      // Process voice commands\r\n      processVoiceCommand(transcript.toLowerCase());\r\n    };\r\n\r\n    recognitionRef.current = recognition;\r\n    recognition.start();\r\n\r\n    return () => {\r\n      if (recognitionRef.current) {\r\n        recognitionRef.current.stop()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 136,
        "code": "useEffect(() => {\r\n    const features = [];\r\n    if (accessibility.highContrast) features.push('ניגודיות גבוהה');\r\n    if (accessibility.fontSize !== 'normal') features.push('גופן מותאם');\r\n    if (accessibility.reducedMotion) features.push('אנימציות מופחתות');\r\n    if (accessibility.screenReaderMode) features.push('קורא מסך');\r\n    if (accessibility.colorBlindMode) features.push('מצב עיוורון צבעים');\r\n    if (accessibility.dyslexiaMode) features.push('מצב דיסלקציה');\r\n    if (accessibility.magnifier) features.push('זכוכית מגדלת');\r\n    if (accessibility.voiceNavigation) features.push('ניווט קולי');\r\n    if (accessibility.readingGuide) features.push('מדריך קריאה');\r\n    if (accessibility.linkHighlight) features.push('הדגשת קישורים');\r\n    \r\n    setActiveFeatures(features)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 167,
        "code": "useEffect(() => {\r\n    if (!announcements) return;\r\n\r\n    const handleAnnouncement = (event) => {\r\n      setCurrentAnnouncement(event.detail.message);\r\n      setShowAnnouncement(true);\r\n      \r\n      setTimeout(() => {\r\n        setShowAnnouncement(false)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 263,
        "code": "useEffect(() => {\r\n    window.resetAccessibilityButton = () => {\r\n      console.log('🔄 Resetting accessibility button...');\r\n      dispatch(accessibilityActions.setButtonPermanentlyClosed(false));\r\n      dispatch(accessibilityActions.setButtonClosed(false));\r\n      dispatch(accessibilityActions.setButtonMinimized(false));\r\n      dispatch(accessibilityActions.setFloatingButton(true));\r\n      localStorage.removeItem('zomet-accessibility-settings');\r\n      localStorage.removeItem('zomet-floating-accessibility-settings');\r\n      console.log('✅ Accessibility button reset complete!');\r\n    };\r\n    \r\n    // Add admin role fix function\r\n    window.fixAdminRole = async () => {\r\n      console.log('🔧 Fixing admin role for zometauto@gmail.com...')",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 11,
        "code": "useState({ x: 0, y: 0 })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 254,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 254,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 254,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 254,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 254,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 254,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 254,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 254,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 254,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 254,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 254,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 254,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 254,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 132,
        "code": "function AccessibilityStatusIndicator() {\r\n  const accessibility = useAccessibility();\r\n  const [activeFeatures, setActiveFeatures] = useState",
        "severity": "medium",
        "description": "Function component not using React.memo may re-render unnecessarily",
        "fix": "Wrap component with React.memo if props are stable"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 205,
        "code": "onClick={() => dispatch(accessibilityActions.setButtonClosed(false))}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "line": 230,
        "code": "onClick={() => {\r\n          dispatch(accessibilityActions.setButtonPermanentlyClosed(false));\r\n          dispatch(accessibilityActions.setButtonClosed(false));\r\n        }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityPanel.jsx",
        "line": 30,
        "code": "function AccessibilityPanel({ isOpen, onClose }) {\r\n  const accessibility = useAccessibility();\r\n  const dispatch = useAccessibilityDispatch();\r\n  const [activeTab, setActiveTab] = useState",
        "severity": "medium",
        "description": "Function component not using React.memo may re-render unnecessarily",
        "fix": "Wrap component with React.memo if props are stable"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityPanel.jsx",
        "line": 134,
        "code": "onClick={() => dispatch(accessibilityActions.setFontSize(value))}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityPanel.jsx",
        "line": 225,
        "code": "onClick={() => setActiveTab('basic')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityPanel.jsx",
        "line": 232,
        "code": "onClick={() => setActiveTab('advanced')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityPanel.jsx",
        "line": 255,
        "code": "onClick={() => dispatch(accessibilityActions.toggleAccessibility())}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityPanel.jsx",
        "line": 281,
        "code": "onClick={() => dispatch(accessibilityActions.resetSettings())}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityPanel.jsx",
        "line": 290,
        "code": "onClick={() => {\r\n                  dispatch(accessibilityActions.setHighContrast(true));\r\n                  dispatch(accessibilityActions.setFontSize('large'));\r\n                  dispatch(accessibilityActions.setFocusVisible(true));\r\n                }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityShortcuts.jsx",
        "line": 9,
        "code": "useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      // Only handle shortcuts when accessibility is enabled\r\n      if (!accessibility.isEnabled) return;\r\n\r\n      // Ctrl + Plus: Increase font size\r\n      if (e.ctrlKey && e.key === '+') {\r\n        e.preventDefault()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityTester.jsx",
        "line": 25,
        "code": "useState({})",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityTester.jsx",
        "line": 487,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityTester.jsx",
        "line": 23,
        "code": "function AccessibilityTester({ isOpen, onClose }) {\r\n  const accessibility = useAccessibility();\r\n  const [testResults, setTestResults] = useState",
        "severity": "medium",
        "description": "Function component not using React.memo may re-render unnecessarily",
        "fix": "Wrap component with React.memo if props are stable"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityToggle.jsx",
        "line": 53,
        "code": "useEffect(() => {\r\n    let count = 0;\r\n    if (accessibility.highContrast) count++;\r\n    if (accessibility.fontSize !== 'normal') count++;\r\n    if (accessibility.reducedMotion) count++;\r\n    if (accessibility.screenReaderMode) count++;\r\n    if (accessibility.colorBlindMode) count++;\r\n    if (accessibility.dyslexiaMode) count++;\r\n    if (accessibility.magnifier) count++;\r\n    if (accessibility.voiceNavigation) count++;\r\n    if (accessibility.readingGuide) count++;\r\n    if (accessibility.linkHighlight) count++;\r\n    if (accessibility.tooltipMode) count++;\r\n    setActiveCount(count)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityToggle.jsx",
        "line": 44,
        "code": "function AccessibilityToggle({ className, variant = \"outline\", size = \"default\" }) {\r\n  const accessibility = useAccessibility();\r\n  const dispatch = useAccessibilityDispatch();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [activeCount, setActiveCount] = useState(0);\r\n  const [showPanel, setShowPanel] = useState(false);\r\n  const [showTester, setShowTester] = useState",
        "severity": "medium",
        "description": "Function component not using React.memo may re-render unnecessarily",
        "fix": "Wrap component with React.memo if props are stable"
      },
      {
        "file": "src\\components\\accessibility\\AccessibleButton.jsx",
        "line": 99,
        "code": "{...accessibilityProps}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\accessibility\\AccessibleButton.jsx",
        "line": 100,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\accessibility\\AccessibleForm.jsx",
        "line": 31,
        "code": "useEffect(() => {\r\n    if (error) {\r\n      announceError(error)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\accessibility\\AccessibleForm.jsx",
        "line": 156,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\accessibility\\AccessibleForm.jsx",
        "line": 156,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\accessibility\\AccessibleForm.jsx",
        "line": 156,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\accessibility\\AccessibleForm.jsx",
        "line": 156,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\accessibility\\AccessibleForm.jsx",
        "line": 156,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 69,
        "code": "useEffect(() => {\r\n    try {\r\n      const saved = localStorage.getItem(STORAGE_KEY);\r\n      if (saved) {\r\n        const settings = JSON.parse(saved);\r\n        setPosition(settings.position || DEFAULT_POSITION);\r\n        setSize(settings.size || DEFAULT_SIZE);\r\n      }\r\n    } catch (error)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 83,
        "code": "useEffect(() => {\r\n    const handleScroll = () => {\r\n      const currentScrollY = window.scrollY;\r\n      \r\n      // Always keep button visible when scrolling\r\n      if (Math.abs(currentScrollY - lastScrollY.current) > 5) {\r\n        setIsVisible(true)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 111,
        "code": "useEffect(() => {\r\n    saveSettings()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 203,
        "code": "useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (!shouldShowButton) return;\r\n\r\n      // Alt + Shift + A: Toggle floating panel\r\n      if (e.altKey && e.shiftKey && e.key === 'A') {\r\n        e.preventDefault();\r\n        if (accessibility.buttonMinimized) {\r\n          handleRestore();\r\n        } else {\r\n          setIsExpanded(!isExpanded);\r\n          announceToScreenReader(isExpanded ? 'פאנל נגישות נסגר' : 'פאנל נגישות נפתח');\r\n        }\r\n      }\r\n      \r\n      // Escape: Close panel or minimize\r\n      if (e.key === 'Escape') {\r\n        if (isExpanded) {\r\n          setIsExpanded(false);\r\n          announceToScreenReader('פאנל נגישות נסגר');\r\n        } else if (!accessibility.buttonMinimized) {\r\n          handleMinimize();\r\n        }\r\n      }\r\n\r\n      // Ctrl + Alt + H: Hide temporarily\r\n      if (e.ctrlKey && e.altKey && e.key === 'H') {\r\n        e.preventDefault();\r\n        handleTemporaryClose()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 364,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 364,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 42,
        "code": "function FloatingAccessibilityButton() {\r\n  const accessibility = useAccessibility();\r\n  const dispatch = useAccessibilityDispatch();\r\n  \r\n  // UI State\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [isResizing, setIsResizing] = useState(false);\r\n  const [position, setPosition] = useState(DEFAULT_POSITION);\r\n  const [size, setSize] = useState(DEFAULT_SIZE);\r\n  const [activeTab, setActiveTab] = useState('basic');\r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const [showCloseConfirm, setShowCloseConfirm] = useState",
        "severity": "medium",
        "description": "Function component not using React.memo may re-render unnecessarily",
        "fix": "Wrap component with React.memo if props are stable"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 99,
        "code": "useCallback(()",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 116,
        "code": "useCallback((e) => {\r\n    if (e.target.closest('.resize-handle') || e.target.closest('.no-drag')) return;\r\n    \r\n    setIsDragging(true)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 131,
        "code": "useCallback((e) => {\r\n    if (dragRef.current.isDragging)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 150,
        "code": "useCallback(() => {\r\n    setIsDragging(false);\r\n    setIsResizing(false)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 161,
        "code": "useCallback((e) => {\r\n    setIsResizing(true)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 178,
        "code": "useCallback(() => {\r\n    dispatch(accessibilityActions.setButtonClosed(true));\r\n    announceToScreenReader('כפתור נגישות הוסתר זמנית')",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 184,
        "code": "useCallback(() => {\r\n    dispatch(accessibilityActions.setButtonPermanentlyClosed(true));\r\n    announceToScreenReader('כפתור נגישות הוסתר עד הפעלה מחדש')",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 190,
        "code": "useCallback(() => {\r\n    dispatch(accessibilityActions.setButtonMinimized(true));\r\n    setIsExpanded(false);\r\n    announceToScreenReader('כפתור נגישות מוזער')",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 197,
        "code": "useCallback(() => {\r\n    dispatch(accessibilityActions.setButtonMinimized(false));\r\n    announceToScreenReader('כפתור נגישות שוחזר')",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 436,
        "code": "onClick={() => setIsExpanded(true)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 496,
        "code": "onClick={() => setIsExpanded(false)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 507,
        "code": "onClick={() => setShowCloseConfirm(true)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 550,
        "code": "onClick={() => setActiveTab('basic')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 558,
        "code": "onClick={() => setActiveTab('advanced')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 566,
        "code": "onClick={() => setActiveTab('settings')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 598,
        "code": "onClick={() => dispatch(accessibilityActions.setFontSize(value))}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 630,
        "code": "onClick={() => {\r\n                          setPosition(DEFAULT_POSITION);\r\n                          setSize(DEFAULT_SIZE);\r\n                          dispatch(accessibilityActions.setButtonPosition(DEFAULT_POSITION));\r\n                        }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 507,
        "code": "onClick={() => setShowCloseConfirm(true)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 664,
        "code": "onClick={() => dispatch(accessibilityActions.resetSettings())}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 723,
        "code": "onClick={() => {\r\n                      handleTemporaryClose();\r\n                      setShowCloseConfirm(false);\r\n                    }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 738,
        "code": "onClick={() => {\r\n                      handlePermanentClose();\r\n                      setShowCloseConfirm(false);\r\n                    }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "line": 755,
        "code": "onClick={() => setShowCloseConfirm(false)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\accessibility\\LiveRegion.jsx",
        "line": 22,
        "code": "useEffect(() => {\r\n    if (!announcements || !message) return;\r\n\r\n    const region = regionRef.current;\r\n    if (!region) return;\r\n\r\n    // Clear any existing timeout\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n    }\r\n\r\n    // Set the message\r\n    region.textContent = message;\r\n\r\n    // Clear the message after delay to allow for repeated announcements\r\n    if (clearDelay > 0) {\r\n      timeoutRef.current = setTimeout(() => {\r\n        if (region.textContent === message)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\accessibility\\LiveRegion.jsx",
        "line": 68,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\accessibility\\LiveRegion.jsx",
        "line": 68,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\accessibility\\LiveRegion.jsx",
        "line": 68,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\accessibility\\SkipLinks.jsx",
        "line": 140,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\accessibility\\SkipLinks.jsx",
        "line": 102,
        "code": "onClick={(e) => handleSkipClick(e, href)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\AdvancedSearch.jsx",
        "line": 54,
        "code": "useEffect(() => {\r\n    if (isOpen) {\r\n      setFilters(initialFilters);\r\n      updateActiveFilters(initialFilters)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\AdvancedSearch.jsx",
        "line": 290,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\components\\AdvancedSearch.jsx",
        "line": 61,
        "code": "useCallback((currentFilters) => {\r\n    const active = [];\r\n    \r\n    if (currentFilters.category && currentFilters.category !== \"all\")",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\AdvancedSearch.jsx",
        "line": 127,
        "code": "useCallback((value) => {\r\n    if (value >= 1000000) return `${(value / 1000000).toFixed(1)}M`;\r\n    if (value >= 1000) return `${(value / 1000).toFixed(0)}K`;\r\n    return value.toLocaleString()",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\AdvancedSearch.jsx",
        "line": 127,
        "code": "useCallback((value) => {\r\n    if (value >= 1000000) return `${(value / 1000000).toFixed(1)}M`;\r\n    if (value >= 1000) return `${(value / 1000).toFixed(0)}K`;\r\n    return value.toLocaleString()",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\AdvancedSearch.jsx",
        "line": 140,
        "code": "useCallback((value) => {\r\n    if (value === 0) return \"ללא מינימום\";\r\n    if (value >= 1500000) return \"ללא מקסימום\";\r\n    if (value >= 1000000) return `${(value / 1000000).toFixed(1)}M ₪`;\r\n    if (value >= 1000) return `${(value / 1000).toFixed(0)}K ₪`;\r\n    return `${value.toLocaleString()",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\AdvancedSearch.jsx",
        "line": 148,
        "code": "useCallback((value) => {\r\n    if (value === 0) return \"ללא מינימום\";\r\n    if (value >= 1000000) return \"ללא מקסימום\";\r\n    if (value >= 1000) return `${(value / 1000).toFixed(0)}K ק\"מ`;\r\n    return `${value.toLocaleString()",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\AdvancedSearch.jsx",
        "line": 155,
        "code": "useCallback((value) => {\r\n    if (value === 1990) return \"מ-1990\";\r\n    if (value === currentYear) return `עד ${currentYear}`;\r\n    return value.toString()",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\AdvancedSearch.jsx",
        "line": 161,
        "code": "useCallback((value) => {\r\n    if (value === 0) return \"ללא מינימום\";\r\n    if (value >= 10000) return \"ללא מקסימום\";\r\n    if (value >= 1000) return `${(value / 1000).toFixed(1)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\AdvancedSearch.jsx",
        "line": 168,
        "code": "useCallback(() => {\r\n    updateActiveFilters(filters);\r\n    onApplyFilters(filters);\r\n    onClose()",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\AdvancedSearch.jsx",
        "line": 168,
        "code": "useCallback(()",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\AdvancedSearch.jsx",
        "line": 194,
        "code": "useCallback((filterKey) => {\r\n    const newFilters = { ...filters };\r\n    \r\n    switch (filterKey)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\AdvancedSearch.jsx",
        "line": 195,
        "code": "{ ...filters }",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\AdvancedSearch.jsx",
        "line": 296,
        "code": "onClick={() => removeFilter(filter.key)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\auth\\AdminGuard.jsx",
        "line": 16,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\components\\auth\\AdminGuard.jsx",
        "line": 98,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\auth\\AdminGuard.jsx",
        "line": 58,
        "code": "onClick={() => window.history.back()}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\auth\\AdminGuard.jsx",
        "line": 65,
        "code": "onClick={() => window.location.href = fallbackPath}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\auth\\AnimatedButton.jsx",
        "line": 53,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\auth\\AuthBackground.jsx",
        "line": 141,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\components\\auth\\AuthBackground.jsx",
        "line": 141,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\components\\auth\\AuthGuard.jsx",
        "line": 76,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\auth\\AuthGuard.jsx",
        "line": 55,
        "code": "onClick={() => window.history.back()}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\auth\\SecurityDashboard.jsx",
        "line": 28,
        "code": "useEffect(() => {\r\n    loadSecurityData()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\auth\\SecurityDashboard.jsx",
        "line": 301,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\components\\auth\\TrustIndicators.jsx",
        "line": 44,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\components\\auth\\TrustIndicators.jsx",
        "line": 44,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\components\\AuthDebugger.jsx",
        "line": 35,
        "code": "onClick={() => window.fixAdminRole?.()}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\AuthDebugger.jsx",
        "line": 41,
        "code": "onClick={() => window.manualAdminFix?.()}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\AuthDebugger.jsx",
        "line": 47,
        "code": "onClick={() => window.applyAdminFix?.()}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\dashboard\\RealTimeActivityFeed.jsx",
        "line": 46,
        "code": "useEffect(() => {\r\n    const loadActivities = async () => {\r\n      try {\r\n        setLoading(true)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\dashboard\\RealTimeActivityFeed.jsx",
        "line": 136,
        "code": "useEffect(() => {\r\n    if (showUserFilter) {\r\n      const loadUsers = async () => {\r\n        const { data } = await supabase\r\n          .from('users')",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\dashboard\\RealTimeActivityFeed.jsx",
        "line": 295,
        "code": "onClick={() => window.location.reload()}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\dashboard\\RealTimeStatistics.jsx",
        "line": 41,
        "code": "useEffect(() => {\r\n    const loadStatistics = async () => {\r\n      try {\r\n        setLoading(true)\r\n        \r\n        // Get real statistics from Supabase\r\n        const today = new Date()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\dashboard\\RealTimeStatistics.jsx",
        "line": 143,
        "code": "useEffect(() => {\r\n    if (!refreshInterval) return\r\n\r\n    const interval = setInterval(async () => {\r\n      try {\r\n        // Reload statistics periodically\r\n        const today = new Date()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\dashboard\\RealTimeStatistics.jsx",
        "line": 366,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\components\\debug\\NavigationDebugger.jsx",
        "line": 24,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\components\\debug\\NavigationDebugger.jsx",
        "line": 52,
        "code": "onClick={() => handleTestNavigation(route.path)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\debug\\NavigationDebugger.jsx",
        "line": 63,
        "code": "onClick={() => {\r\n            localStorage.setItem('hideNavigationDebugger', 'true');\r\n            window.location.reload();\r\n          }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\ErrorBoundary.jsx",
        "line": 260,
        "code": "useState({\r\n    isLoading: false,\r\n    error: null,\r\n    retryCount: 0,\r\n    data: null\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\components\\ErrorBoundary.jsx",
        "line": 269,
        "code": "useCallback(async (...args)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\ErrorBoundary.jsx",
        "line": 294,
        "code": "useCallback(async (...args) => {\r\n    if (state.retryCount >= maxRetries) {\r\n      throw new Error('Maximum retry attempts reached')",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\ErrorBoundary.jsx",
        "line": 305,
        "code": "useCallback(()",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\ErrorBoundary.jsx",
        "line": 227,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ErrorNotification.jsx",
        "line": 27,
        "code": "useEffect(() => {\r\n    if (!autoHide || error.severity === ERROR_SEVERITY.CRITICAL) return\r\n\r\n    const timer = setInterval(() => {\r\n      setTimeLeft(prev => {\r\n        if (prev <= 1) {\r\n          setIsVisible(false)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\ErrorNotification.jsx",
        "line": 143,
        "code": "useEffect(() => {\r\n    const handleOnline = () => setIsOnline(true)\r\n    const handleOffline = () => setIsOnline(false)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\ErrorNotification.jsx",
        "line": 175,
        "code": "useEffect(() => {\r\n    // Listen for global error events\r\n    const handleGlobalError = (event) => {\r\n      const error = {\r\n        id: `global_${Date.now()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\examples\\FileUploadExample.jsx",
        "line": 212,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\components\\forms\\ValidatedForm.jsx",
        "line": 422,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\components\\forms\\ValidatedForm.jsx",
        "line": 281,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\forms\\ValidatedForm.jsx",
        "line": 281,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\forms\\ValidatedForm.jsx",
        "line": 281,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\forms\\ValidatedForm.jsx",
        "line": 449,
        "code": "{...currentStepData}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\forms\\ValidatedForm.jsx",
        "line": 74,
        "code": "onClick={() => onFieldFocus && onFieldFocus(fieldName)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\forms\\ValidatedInput.jsx",
        "line": 187,
        "code": "useEffect(() => {\r\n    if (onValidationChange)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\forms\\ValidatedInput.jsx",
        "line": 187,
        "code": "useEffect(() => {\r\n    if (onValidationChange)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\forms\\ValidatedInput.jsx",
        "line": 187,
        "code": "useEffect(() => {\r\n    if (onValidationChange)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\forms\\ValidatedInput.jsx",
        "line": 187,
        "code": "useEffect(() => {\r\n    if (onValidationChange)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\forms\\ValidatedInput.jsx",
        "line": 505,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\components\\forms\\ValidatedInput.jsx",
        "line": 203,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\forms\\ValidatedInput.jsx",
        "line": 203,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\forms\\ValidatedInput.jsx",
        "line": 203,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\forms\\ValidatedInput.jsx",
        "line": 203,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\forms\\ValidatedInput.jsx",
        "line": 220,
        "code": "onClick={() => setShowPassword(!showPassword)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\messaging\\RealTimeMessaging.jsx",
        "line": 60,
        "code": "useEffect(() => {\r\n    if (!conversationId || !participant) return\r\n\r\n    const loadMessages = async () => {\r\n      setLoading(true)\r\n      try {\r\n        const response = await messagingService.getConversation(participant.id)\r\n        if (response.success) {\r\n          setMessages(response.data.messages || [])\r\n        }\r\n      } catch (error)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\messaging\\RealTimeMessaging.jsx",
        "line": 85,
        "code": "useEffect(() => {\r\n    if (!conversationId || !participant) return\r\n\r\n    const handleRealTimeUpdate = (payload) => {\r\n      switch (payload.type) {\r\n        case 'new_message':\r\n          if (payload.new)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\messaging\\RealTimeMessaging.jsx",
        "line": 138,
        "code": "useEffect(() => {\r\n    newMessages.forEach(message => {\r\n      if (message.sender_id === participant?.id) {\r\n        setMessages(prev => {\r\n          // Avoid duplicates\r\n          if (prev.find(m => m.id === message.id))",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\messaging\\RealTimeMessaging.jsx",
        "line": 152,
        "code": "useEffect(() => {\r\n    scrollToBottom()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\messaging\\RealTimeMessaging.jsx",
        "line": 157,
        "code": "useEffect(() => {\r\n    updatePresence(true)\r\n    return () => updatePresence(false)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\messaging\\RealTimeMessaging.jsx",
        "line": 167,
        "code": "useCallback((value) => {\r\n    setNewMessage(value)\r\n    \r\n    if (!isTyping && value.trim()) {\r\n      setIsTyping(true)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\navigation\\SafeLink.jsx",
        "line": 44,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\navigation\\SafeLink.jsx",
        "line": 44,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\notifications\\NotificationPreferences.jsx",
        "line": 55,
        "code": "useEffect(() => {\r\n    if (!user) return\r\n    loadPreferences()\r\n    checkBrowserPermission()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\notifications\\NotificationPreferences.jsx",
        "line": 38,
        "code": "useState({\r\n    email_notifications: true,\r\n    browser_notifications: true,\r\n    sound_notifications: true,\r\n    message_notifications: true,\r\n    system_notifications: true,\r\n    ad_notifications: true,\r\n    promotion_notifications: true,\r\n    quiet_hours_enabled: false,\r\n    quiet_hours_start: '22:00',\r\n    quiet_hours_end: '08:00'\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\components\\notifications\\NotificationPreferences.jsx",
        "line": 322,
        "code": "onClick={() => testNotification('message')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\notifications\\NotificationPreferences.jsx",
        "line": 348,
        "code": "onClick={() => testNotification('system')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\notifications\\NotificationPreferences.jsx",
        "line": 374,
        "code": "onClick={() => testNotification('ad_inquiry')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\notifications\\NotificationPreferences.jsx",
        "line": 400,
        "code": "onClick={() => testNotification('promotion')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\notifications\\RealTimeNotifications.jsx",
        "line": 111,
        "code": "useEffect(() => {\r\n    if (!user) return\r\n\r\n    loadNotifications()\r\n    setupRealTimeSubscription()\r\n\r\n    // Request notification permission\r\n    if (enableBrowserNotifications) {\r\n      requestNotificationPermission()\r\n    }\r\n\r\n    return () => {\r\n      if (subscription) {\r\n        subscription.unsubscribe()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\notifications\\RealTimeNotifications.jsx",
        "line": 130,
        "code": "useEffect(() => {\r\n    if (newNotifications.length > 0) {\r\n      newNotifications.forEach(notification => {\r\n        handleNewNotification(notification)\r\n      })\r\n      clearNewNotifications()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\notifications\\RealTimeNotifications.jsx",
        "line": 140,
        "code": "useEffect(() => {\r\n    if (notificationQueue.length === 0) return\r\n\r\n    const timer = setTimeout(() => {\r\n      processBatchedNotifications()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\notifications\\RealTimeNotifications.jsx",
        "line": 306,
        "code": "onClick={() => handleNotificationClick?.(notification)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\notifications\\RealTimeNotifications.jsx",
        "line": 472,
        "code": "onClick={() => handleNotificationClick(notification)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\search\\BasicSearch.jsx",
        "line": 55,
        "code": "useEffect(() => {\r\n    if (advancedFilters)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\search\\BasicSearch.jsx",
        "line": 16,
        "code": "useState({\r\n    category: \"all\",\r\n    manufacturer: \"all\",\r\n    location: \"all\",\r\n    maxPrice: \"all\",\r\n    maxYear: \"all\"\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\components\\search\\BasicSearch.jsx",
        "line": 150,
        "code": "useCallback((e) => {\r\n    const query = e.target.value;\r\n    setSearchQuery(query);\r\n    \r\n    if (searchTimeoutRef.current) {\r\n      clearTimeout(searchTimeoutRef.current);\r\n    }\r\n\r\n    searchTimeoutRef.current = setTimeout(()",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\search\\BasicSearch.jsx",
        "line": 184,
        "code": "useCallback((filters) => {\r\n    return Object.values(filters).some(value => value !== \"all\")",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\search\\BasicSearch.jsx",
        "line": 189,
        "code": "useCallback((filters) => {\r\n    if (onFiltersSync)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\search\\BasicSearch.jsx",
        "line": 203,
        "code": "useCallback(() => {\r\n    setSearchQuery('')",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\search\\BasicSearch.jsx",
        "line": 77,
        "code": "useMemo(()",
        "severity": "medium",
        "description": "useMemo without dependency array",
        "fix": "Add dependency array to useMemo"
      },
      {
        "file": "src\\components\\search\\BasicSearch.jsx",
        "line": 219,
        "code": "useMemo(() => {\r\n    return Object.values(basicFilters).filter(value => value !== \"all\")",
        "severity": "medium",
        "description": "useMemo without dependency array",
        "fix": "Add dependency array to useMemo"
      },
      {
        "file": "src\\components\\security\\AccessControl.jsx",
        "line": 164,
        "code": "useCallback((role)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\security\\AccessControl.jsx",
        "line": 347,
        "code": "useMemo(() => {\r\n    if (role && !hasRole(role)) return false\r\n    if (permission && !checkPermission(permission))",
        "severity": "medium",
        "description": "useMemo without dependency array",
        "fix": "Add dependency array to useMemo"
      },
      {
        "file": "src\\components\\security\\AccessControl.jsx",
        "line": 95,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\security\\SecurityMonitor.jsx",
        "line": 56,
        "code": "useEffect(() => {\r\n    const updateMetrics = () => {\r\n      const events = securityValidator.getSecurityEvents()\r\n      const last24Hours = Date.now() - (24 * 60 * 60 * 1000)\r\n      const recentEvents = events.filter(event => \r\n        new Date(event.timestamp).getTime() > last24Hours\r\n      )",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\security\\SecurityMonitor.jsx",
        "line": 332,
        "code": "useEffect(() => {\r\n    analyzeSuspiciousActivity()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\security\\SecurityMonitor.jsx",
        "line": 452,
        "code": "useEffect(() => {\r\n    const loadEvents = () => {\r\n      const allEvents = securityValidator.getSecurityEvents()\r\n      setEvents(allEvents)\r\n    }\r\n\r\n    loadEvents()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\security\\SecurityMonitor.jsx",
        "line": 464,
        "code": "useEffect(() => {\r\n    let filtered = [...events]\r\n\r\n    // Apply filters\r\n    if (filters.eventType) {\r\n      filtered = filtered.filter(event => event.type === filters.eventType)\r\n    }\r\n\r\n    if (filters.userId) {\r\n      filtered = filtered.filter(event => \r\n        event.details.userId?.includes(filters.userId)\r\n      )\r\n    }\r\n\r\n    if (filters.timeRange) {\r\n      const now = Date.now()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\security\\SecurityMonitor.jsx",
        "line": 47,
        "code": "useState({\r\n    totalEvents: 0,\r\n    criticalEvents: 0,\r\n    suspiciousUsers: 0,\r\n    activeUsers: 0,\r\n    failedLogins: 0,\r\n    permissionDenials: 0\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\components\\security\\SecurityMonitor.jsx",
        "line": 432,
        "code": "useState({\r\n    eventType: '',\r\n    userId: '',\r\n    timeRange: '24h',\r\n    search: ''\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\components\\security\\SecurityMonitor.jsx",
        "line": 137,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\components\\security\\SecurityMonitor.jsx",
        "line": 137,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\components\\security\\SecurityMonitor.jsx",
        "line": 137,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\components\\security\\SecurityMonitor.jsx",
        "line": 246,
        "code": "onClick={() => onEventClick?.(event)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\security\\SecurityMonitor.jsx",
        "line": 642,
        "code": "onClick={() => setSelectedEvent(null)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\ui\\accordion.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\accordion.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\accordion.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\alert-dialog.jsx",
        "line": 19,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\alert-dialog.jsx",
        "line": 19,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\alert-dialog.jsx",
        "line": 19,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\alert-dialog.jsx",
        "line": 19,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\alert-dialog.jsx",
        "line": 19,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\alert-dialog.jsx",
        "line": 19,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\alert-dialog.jsx",
        "line": 19,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\alert-dialog.jsx",
        "line": 19,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\alert.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\alert.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\alert.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\avatar.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\avatar.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\avatar.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\badge.jsx",
        "line": 31,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\breadcrumb.jsx",
        "line": 8,
        "code": "{ ...props }",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\breadcrumb.jsx",
        "line": 8,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\breadcrumb.jsx",
        "line": 8,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\breadcrumb.jsx",
        "line": 8,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\breadcrumb.jsx",
        "line": 8,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\breadcrumb.jsx",
        "line": 8,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\breadcrumb.jsx",
        "line": 8,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\breadcrumb.jsx",
        "line": 8,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\button.jsx",
        "line": 43,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\calendar.jsx",
        "line": 60,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\calendar.jsx",
        "line": 60,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\calendar.jsx",
        "line": 60,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\card.jsx",
        "line": 9,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\card.jsx",
        "line": 9,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\card.jsx",
        "line": 9,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\card.jsx",
        "line": 9,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\card.jsx",
        "line": 9,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\card.jsx",
        "line": 9,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\carousel.jsx",
        "line": 66,
        "code": "useEffect(() => {\n    if (!api || !setApi) {\n      return\n    }\n\n    setApi(api)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\ui\\carousel.jsx",
        "line": 74,
        "code": "useEffect(() => {\n    if (!api) {\n      return\n    }\n\n    onSelect(api)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\ui\\carousel.jsx",
        "line": 39,
        "code": "useCallback((api) => {\n    if (!api) {\n      return\n    }\n\n    setCanScrollPrev(api.canScrollPrev())\n    setCanScrollNext(api.canScrollNext())",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\ui\\carousel.jsx",
        "line": 48,
        "code": "useCallback(() => {\n    api?.scrollPrev()",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\ui\\carousel.jsx",
        "line": 52,
        "code": "useCallback(() => {\n    api?.scrollNext()",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\ui\\carousel.jsx",
        "line": 56,
        "code": "useCallback((event) => {\n    if (event.key === \"ArrowLeft\") {\n      event.preventDefault()\n      scrollPrev()\n    } else if (event.key === \"ArrowRight\") {\n      event.preventDefault()\n      scrollNext()",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\ui\\carousel.jsx",
        "line": 107,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\carousel.jsx",
        "line": 107,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\carousel.jsx",
        "line": 107,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\carousel.jsx",
        "line": 107,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\carousel.jsx",
        "line": 107,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\chart.jsx",
        "line": 102,
        "code": "useMemo(() => {\n    if (hideLabel || !payload?.length)",
        "severity": "medium",
        "description": "useMemo without dependency array",
        "fix": "Add dependency array to useMemo"
      },
      {
        "file": "src\\components\\ui\\chart.jsx",
        "line": 38,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\checkbox.jsx",
        "line": 14,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\command.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\command.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\command.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\command.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\command.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\command.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\command.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\command.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\command.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\context-menu.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\context-menu.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\context-menu.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\context-menu.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\context-menu.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\context-menu.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\context-menu.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\context-menu.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\context-menu.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\dialog.jsx",
        "line": 24,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\dialog.jsx",
        "line": 24,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\dialog.jsx",
        "line": 24,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\dialog.jsx",
        "line": 24,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\dialog.jsx",
        "line": 24,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\dialog.jsx",
        "line": 24,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\drawer.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\drawer.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\drawer.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\drawer.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\drawer.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\drawer.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\drawer.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\dropdown-menu.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\dropdown-menu.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\dropdown-menu.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\dropdown-menu.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\dropdown-menu.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\dropdown-menu.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\dropdown-menu.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\dropdown-menu.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\dropdown-menu.jsx",
        "line": 27,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\form.jsx",
        "line": 14,
        "code": "{\n    ...props\n  }",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\form.jsx",
        "line": 20,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\form.jsx",
        "line": 20,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\form.jsx",
        "line": 20,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\form.jsx",
        "line": 74,
        "code": "{ ...props }",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\form.jsx",
        "line": 20,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\form.jsx",
        "line": 20,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\form.jsx",
        "line": 20,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\hover-card.jsx",
        "line": 21,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\ImageUpload.jsx",
        "line": 251,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\components\\ui\\ImageUpload.jsx",
        "line": 64,
        "code": "useCallback(async (files) => {\r\n    if (!files || files.length === 0) return\r\n\r\n    const fileArray = Array.from(files)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\ui\\ImageUpload.jsx",
        "line": 116,
        "code": "useCallback((e) => {\r\n    dragDropUtils.handleDragOver(e)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\ui\\ImageUpload.jsx",
        "line": 116,
        "code": "useCallback((e)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\ui\\ImageUpload.jsx",
        "line": 116,
        "code": "useCallback((e)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\ui\\ImageUpload.jsx",
        "line": 116,
        "code": "useCallback((e)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\ui\\ImageUpload.jsx",
        "line": 139,
        "code": "useCallback((e) => {\r\n    handleFileSelect(e.target.files)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\ui\\ImageUpload.jsx",
        "line": 146,
        "code": "useCallback((previewId) => {\r\n    setPreviews(prev => {\r\n      const updated = prev.filter(p => p.id !== previewId)\r\n      // Revoke URL for removed preview\r\n      const removed = prev.find(p => p.id === previewId)\r\n      if (removed) {\r\n        revokeImagePreview(removed.preview)\r\n      }\r\n      return updated\r\n    })",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\ui\\ImageUpload.jsx",
        "line": 185,
        "code": "useCallback(() => {\r\n    previews.forEach(preview => revokeImagePreview(preview.preview))\r\n    setPreviews([])\r\n    setValidationErrors([])\r\n    resetUploadState()\r\n    if (fileInputRef.current)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\ui\\ImageUpload.jsx",
        "line": 198,
        "code": "useCallback(() => {\r\n    if (fileInputRef.current && !disabled && !isUploading) {\r\n      fileInputRef.current.click()",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\ui\\ImageUpload.jsx",
        "line": 323,
        "code": "onClick={(e) => {\r\n                      e.stopPropagation()\r\n                      rotateImage(preview.id)\r\n                    }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\ui\\ImageUpload.jsx",
        "line": 335,
        "code": "onClick={(e) => {\r\n                      e.stopPropagation()\r\n                      window.open(preview.preview, '_blank')\r\n                    }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\ui\\ImageUpload.jsx",
        "line": 346,
        "code": "onClick={(e) => {\r\n                      e.stopPropagation()\r\n                      removePreview(preview.id)\r\n                    }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\ui\\input-otp.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\input-otp.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\input-otp.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\input-otp.jsx",
        "line": 46,
        "code": "{ ...props }",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\input-otp.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\input.jsx",
        "line": 14,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\label.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 9,
        "code": "{\n  ...props\n}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 9,
        "code": "{\n  ...props\n}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 9,
        "code": "{\n  ...props\n}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 9,
        "code": "{\n  ...props\n}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 9,
        "code": "{\n  ...props\n}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\menubar.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\navigation-menu.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\navigation-menu.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\navigation-menu.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\navigation-menu.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\navigation-menu.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\navigation-menu.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\pagination.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\pagination.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\pagination.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\pagination.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\pagination.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\pagination.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\pagination.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\popover.jsx",
        "line": 22,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\progress.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\radio-group.jsx",
        "line": 8,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\radio-group.jsx",
        "line": 8,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\resizable.jsx",
        "line": 17,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\resizable.jsx",
        "line": 17,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\scroll-area.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\scroll-area.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\select.jsx",
        "line": 22,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\select.jsx",
        "line": 22,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\select.jsx",
        "line": 22,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\select.jsx",
        "line": 22,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\select.jsx",
        "line": 22,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\select.jsx",
        "line": 22,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\select.jsx",
        "line": 22,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\separator.jsx",
        "line": 19,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sheet.jsx",
        "line": 23,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sheet.jsx",
        "line": 23,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sheet.jsx",
        "line": 23,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sheet.jsx",
        "line": 23,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sheet.jsx",
        "line": 23,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sheet.jsx",
        "line": 23,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 77,
        "code": "useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault()\n        toggleSidebar()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 57,
        "code": "useCallback((value) => {\n    const openState = typeof value === \"function\" ? value(open) : value\n    if (setOpenProp) {\n      setOpenProp(openState)\n    } else {\n      _setOpen(openState)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 70,
        "code": "useCallback(() => {\n    return isMobile\n      ? setOpenMobile((open) => !open)\n      : setOpen((open) => !open)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 96,
        "code": "useMemo(()",
        "severity": "medium",
        "description": "useMemo without dependency array",
        "fix": "Add dependency array to useMemo"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 528,
        "code": "useMemo(() => {\n    return `${Math.floor(Math.random() * 40)",
        "severity": "medium",
        "description": "useMemo without dependency array",
        "fix": "Add dependency array to useMemo"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 479,
        "code": "{...tooltip}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 567,
        "code": "{ ...props }",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 122,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "line": 229,
        "code": "onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\components\\ui\\skeleton.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\slider.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sonner.jsx",
        "line": 5,
        "code": "{\n  ...props\n}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\sonner.jsx",
        "line": 25,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\switch.jsx",
        "line": 12,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\table.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\table.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\table.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\table.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\table.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\table.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\table.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\table.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\tabs.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\tabs.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\tabs.jsx",
        "line": 15,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\textarea.jsx",
        "line": 13,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\toast.jsx",
        "line": 6,
        "code": "{ ...props }",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\toast.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\toast.jsx",
        "line": 6,
        "code": "{ ...props }",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\toast.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\toast.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\toast.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\toast.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\toast.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\toast.jsx",
        "line": 10,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\toaster.jsx",
        "line": 18,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\toggle-group.jsx",
        "line": 17,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\toggle-group.jsx",
        "line": 17,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\toggle.jsx",
        "line": 33,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\tooltip.jsx",
        "line": 23,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\ui\\use-toast.jsx",
        "line": 147,
        "code": "useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\components\\ui\\use-toast.jsx",
        "line": 144,
        "code": "function useToast() {\n  const [state, setState] = useState",
        "severity": "medium",
        "description": "Function component not using React.memo may re-render unnecessarily",
        "fix": "Wrap component with React.memo if props are stable"
      },
      {
        "file": "src\\components\\ui\\use-toast.jsx",
        "line": 113,
        "code": "{ ...props }",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\components\\VehicleCard.jsx",
        "line": 177,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\components\\VehicleCard.jsx",
        "line": 176,
        "code": "onClick={(e) => {\n                  console.log('Vehicle card clicked:', vehicle.id);\n                  // Don't prevent default - let React Router handle it\n                }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\contexts\\AccessibilityContext.jsx",
        "line": 159,
        "code": "useEffect(() => {\r\n    try {\r\n      const savedSettings = localStorage.getItem(STORAGE_KEY);\r\n      if (savedSettings) {\r\n        const parsedSettings = JSON.parse(savedSettings)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\contexts\\AccessibilityContext.jsx",
        "line": 159,
        "code": "useEffect(()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\contexts\\AccessibilityContext.jsx",
        "line": 181,
        "code": "useEffect(() => {\r\n    const root = document.documentElement;\r\n    const body = document.body;\r\n\r\n    // High contrast mode - only when accessibility is enabled\r\n    if (state.isEnabled && state.highContrast) {\r\n      root.classList.add('accessibility-high-contrast');\r\n    } else {\r\n      root.classList.remove('accessibility-high-contrast')",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\contexts\\AccessibilityContext.jsx",
        "line": 306,
        "code": "useEffect(() => {\r\n    // Detect prefers-reduced-motion\r\n    const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\r\n    if (mediaQuery.matches && !state.reducedMotion)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\contexts\\AccessibilityContext.jsx",
        "line": 196,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\contexts\\AccessibilityContext.jsx",
        "line": 196,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\contexts\\AccessibilityContext.jsx",
        "line": 137,
        "code": "{ ...initialState }",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\hooks\\use-mobile.jsx",
        "line": 8,
        "code": "useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\hooks\\use-mobile.jsx",
        "line": 5,
        "code": "function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState",
        "severity": "medium",
        "description": "Function component not using React.memo may re-render unnecessarily",
        "fix": "Wrap component with React.memo if props are stable"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 99,
        "code": "useEffect(() => {\r\n    // Get initial session\r\n    const getInitialSession = async () => {\r\n      try {\r\n        const { session } = await authService.getCurrentSession()\r\n        setSession(session)\r\n        \r\n        if (session?.user)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 64,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 30,
        "code": "function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null)\r\n  const [session, setSession] = useState(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n  const [permissions, setPermissions] = useState([])\r\n  const [isEmailVerified, setIsEmailVerified] = useState",
        "severity": "medium",
        "description": "Function component not using React.memo may re-render unnecessarily",
        "fix": "Wrap component with React.memo if props are stable"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "line": 661,
        "code": "{...props}",
        "severity": "low",
        "description": "Object spread in render may cause unnecessary re-renders",
        "fix": "Memoize object spreads or move outside render"
      },
      {
        "file": "src\\pages\\AddVehicle.jsx",
        "line": 52,
        "code": "useEffect(() => {\n    const initPage = async () => {\n      // Wait for auth to load\n      if (authLoading) return;\n      \n      setIsLoading(true);\n      const urlParams = new URLSearchParams(location.search);\n      const editId = urlParams.get('edit');\n\n      // Check if user is authenticated\n      if (!user) {\n        console.error(\"User not logged in or session expired\");\n        alert(\"עליך להיות מחובר כדי לפרסם או לערוך מודעה.\");\n        navigate(createPageUrl(\"Home\"));\n        return;\n      }\n\n      if (editId) {\n        // --- EDIT MODE ---\n        setIsEditMode(true);\n        setEditVehicleId(editId);\n\n        try {\n          const vehicleResponse = await Vehicle.filter({ id: editId });\n\n          if (!vehicleResponse || vehicleResponse.length === 0) {\n            alert(\"המודעה לעריכה לא נמצאה.\");\n            navigate(createPageUrl(\"Home\"));\n            return;\n          }\n\n          const vehicleToEdit = vehicleResponse[0];\n          const canEdit = vehicleToEdit.created_by === user.id || user.email === \"zometauto@gmail.com\";\n\n          if (!canEdit) {\n            alert(\"אין לך הרשאה לערוך מודעה זו.\");\n            navigate(createPageUrl(\"Home\"))",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\AddVehicle.jsx",
        "line": 25,
        "code": "useState({})",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\AddVehicle.jsx",
        "line": 31,
        "code": "useState({\n    title: \"\", type: \"\", manufacturer: \"\", model: \"\", year: \"\", kilometers: \"\", price: \"\",\n    description: \"\", contact_name: \"\", contact_phone: \"\", contact_email: \"\", location: \"\",\n    engine_type: \"\", transmission: \"\", seats: \"\", hand: \"\", images: [], listing_type: \"בסיסי\",\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\AddVehicle.jsx",
        "line": 709,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\AddVehicle.jsx",
        "line": 709,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\AddVehicle.jsx",
        "line": 410,
        "code": "onClick={() => setSelectedPlan(plan.value)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\AddVehicle.jsx",
        "line": 540,
        "code": "onClick={() => setIncludeVat(true)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\AddVehicle.jsx",
        "line": 548,
        "code": "onClick={() => setIncludeVat(false)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\AddVehicle.jsx",
        "line": 737,
        "code": "onClick={() => removeImage(index)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\AddVehicle.jsx",
        "line": 822,
        "code": "onClick={() => navigate(createPageUrl(`VehicleDetails?id=${editVehicleId}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\AdminDashboard.jsx",
        "line": 117,
        "code": "useEffect(() => {\r\n    loadDashboardData()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\admin\\AdminLayout.jsx",
        "line": 173,
        "code": "useEffect(() => {\r\n    if (!user || !isAdmin) {\r\n      navigate('/dashboard')",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\admin\\AdminLayout.jsx",
        "line": 185,
        "code": "useEffect(() => {\r\n    if (!user || !isAdmin) return;\r\n\r\n    const initializeAdminDashboard = async () => {\r\n      try {\r\n        // Request notification permission\r\n        await requestNotificationPermission();\r\n        \r\n        // Update user presence\r\n        await updatePresence(true);\r\n        \r\n        // Load admin statistics\r\n        await loadAdminStats();\r\n        \r\n        // Load system metrics\r\n        await loadSystemMetrics();\r\n        \r\n        // Track session start\r\n        const sessionStart = Date.now();\r\n        setSessionDuration(0);\r\n        \r\n        // Set up session duration tracking\r\n        const sessionInterval = setInterval(() => {\r\n          setSessionDuration(Math.floor((Date.now() - sessionStart) / 1000))",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\admin\\AdminLayout.jsx",
        "line": 224,
        "code": "useEffect(() => {\r\n    if (newMessages.length > 0)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\admin\\AdminLayout.jsx",
        "line": 237,
        "code": "useEffect(() => {\r\n    if (newNotifications.length > 0) {\r\n      // Process admin-specific notifications\r\n      newNotifications.forEach(notification => {\r\n        if (notification.type === 'system_alert')",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\admin\\AdminLayout.jsx",
        "line": 254,
        "code": "useEffect(() => {\r\n    const updateActivity = () => {\r\n      setLastActivity(new Date())",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\admin\\AdminLayout.jsx",
        "line": 272,
        "code": "useEffect(() => {\r\n    const handleOnline = () => {\r\n      setIsOnline(true);\r\n      if (user) updatePresence(true);\r\n    };\r\n    \r\n    const handleOffline = () => {\r\n      setIsOnline(false);\r\n      if (user) updatePresence(false)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\admin\\AdminLayout.jsx",
        "line": 137,
        "code": "useState({\r\n    totalUsers: 0,\r\n    activeUsers: 0,\r\n    totalVehicles: 0,\r\n    pendingVehicles: 0,\r\n    totalMessages: 0,\r\n    unreadMessages: 0,\r\n    systemHealth: 100,\r\n    serverLoad: 0,\r\n    databaseSize: 0,\r\n    activeConnections: 0,\r\n    todayRegistrations: 0,\r\n    todayVehicles: 0,\r\n    todayMessages: 0,\r\n    errorCount: 0,\r\n    warningCount: 0\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\admin\\AdminLayout.jsx",
        "line": 156,
        "code": "useState({\r\n    cpuUsage: 0,\r\n    memoryUsage: 0,\r\n    diskUsage: 0,\r\n    networkTraffic: 0,\r\n    responseTime: 0,\r\n    uptime: 0,\r\n    lastBackup: null,\r\n    securityAlerts: 0\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\admin\\AdminLayout.jsx",
        "line": 608,
        "code": "onClick={() => navigate('/dashboard')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\AdminLayout.jsx",
        "line": 727,
        "code": "onClick={() => navigate('/admin/vehicles')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\AdminLayout.jsx",
        "line": 740,
        "code": "onClick={() => navigate('/admin/messages')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\AdminLayout.jsx",
        "line": 755,
        "code": "onClick={() => navigate('/admin/users')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\AdminLayout.jsx",
        "line": 769,
        "code": "onClick={() => navigate('/admin/analytics')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\Analytics.jsx",
        "line": 93,
        "code": "useEffect(() => {\r\n    loadAnalyticsData()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\admin\\Analytics.jsx",
        "line": 660,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\admin\\Analytics.jsx",
        "line": 660,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\admin\\Analytics.jsx",
        "line": 660,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\admin\\Analytics.jsx",
        "line": 660,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\admin\\Analytics.jsx",
        "line": 660,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\admin\\Analytics.jsx",
        "line": 660,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\admin\\Analytics.jsx",
        "line": 660,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\admin\\Analytics.jsx",
        "line": 660,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\admin\\Analytics.jsx",
        "line": 660,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\admin\\Analytics.jsx",
        "line": 660,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\admin\\SystemManagement.jsx",
        "line": 108,
        "code": "useEffect(() => {\r\n    loadSystemData()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\admin\\SystemManagement.jsx",
        "line": 63,
        "code": "useState({\r\n    overall: 'healthy',\r\n    database: 'healthy',\r\n    server: 'healthy',\r\n    storage: 'healthy',\r\n    network: 'healthy'\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\admin\\SystemManagement.jsx",
        "line": 88,
        "code": "useState({\r\n    lastBackup: null,\r\n    nextBackup: null,\r\n    backupSize: 0,\r\n    status: 'idle',\r\n    autoBackup: true\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\admin\\SystemManagement.jsx",
        "line": 447,
        "code": "onClick={() => setShowMaintenanceDialog(true)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\SystemManagement.jsx",
        "line": 485,
        "code": "onClick={() => dismissAlert(alert.id)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\UsersManagement.jsx",
        "line": 82,
        "code": "useEffect(() => {\r\n    loadUsers()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\admin\\UsersManagement.jsx",
        "line": 87,
        "code": "useEffect(() => {\r\n    applyFilters()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\admin\\UsersManagement.jsx",
        "line": 63,
        "code": "useState({\r\n    search: '',\r\n    role: 'all',\r\n    status: 'all',\r\n    dateRange: 'all'\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\admin\\UsersManagement.jsx",
        "line": 71,
        "code": "useState({\r\n    totalUsers: 0,\r\n    activeUsers: 0,\r\n    adminUsers: 0,\r\n    newUsersToday: 0,\r\n    newUsersWeek: 0,\r\n    blockedUsers: 0,\r\n    verifiedUsers: 0\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\admin\\UsersManagement.jsx",
        "line": 594,
        "code": "onClick={() => handleUpdateUserStatus(userData.id, !userData.is_active)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\UsersManagement.jsx",
        "line": 605,
        "code": "onClick={() => handleUpdateUserRole(userData.id, userData.role === 'admin' ? 'user' : 'admin')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\UsersManagement.jsx",
        "line": 616,
        "code": "onClick={() => {\r\n                          setSelectedUser(userData);\r\n                          setShowUserDialog(true);\r\n                        }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\UsersManagement.jsx",
        "line": 630,
        "code": "onClick={() => {\r\n                            setSelectedUser(userData);\r\n                            setShowDeleteDialog(true);\r\n                          }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\UsersManagement.jsx",
        "line": 761,
        "code": "onClick={() => handleUpdateUserStatus(selectedUser.id, !selectedUser.is_active)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\UsersManagement.jsx",
        "line": 776,
        "code": "onClick={() => handleUpdateUserRole(selectedUser.id, selectedUser.role === 'admin' ? 'user' : 'admin')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\UsersManagement.jsx",
        "line": 788,
        "code": "onClick={() => setShowUserDialog(false)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\VehiclesManagement.jsx",
        "line": 101,
        "code": "useEffect(() => {\r\n    loadVehicles()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\admin\\VehiclesManagement.jsx",
        "line": 106,
        "code": "useEffect(() => {\r\n    applyFilters()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\admin\\VehiclesManagement.jsx",
        "line": 79,
        "code": "useState({\r\n    search: '',\r\n    status: 'all',\r\n    type: 'all',\r\n    dateRange: 'all',\r\n    priceRange: 'all'\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\admin\\VehiclesManagement.jsx",
        "line": 88,
        "code": "useState({\r\n    totalVehicles: 0,\r\n    pendingVehicles: 0,\r\n    approvedVehicles: 0,\r\n    rejectedVehicles: 0,\r\n    soldVehicles: 0,\r\n    todayVehicles: 0,\r\n    weekVehicles: 0,\r\n    totalViews: 0,\r\n    avgPrice: 0\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\admin\\VehiclesManagement.jsx",
        "line": 872,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\admin\\VehiclesManagement.jsx",
        "line": 681,
        "code": "onClick={() => handleApproveVehicle(vehicle.id)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\VehiclesManagement.jsx",
        "line": 690,
        "code": "onClick={() => {\r\n                              setSelectedVehicle(vehicle);\r\n                              setShowRejectDialog(true);\r\n                            }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\VehiclesManagement.jsx",
        "line": 705,
        "code": "onClick={() => {\r\n                          setSelectedVehicle(vehicle);\r\n                          setShowVehicleDialog(true);\r\n                        }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\VehiclesManagement.jsx",
        "line": 718,
        "code": "onClick={() => {\r\n                          setSelectedVehicle(vehicle);\r\n                          setShowDeleteDialog(true);\r\n                        }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\VehiclesManagement.jsx",
        "line": 894,
        "code": "onClick={() => {\r\n                          handleApproveVehicle(selectedVehicle.id);\r\n                          setShowVehicleDialog(false);\r\n                        }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\VehiclesManagement.jsx",
        "line": 905,
        "code": "onClick={() => {\r\n                          setShowVehicleDialog(false);\r\n                          setShowRejectDialog(true);\r\n                        }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\VehiclesManagement.jsx",
        "line": 934,
        "code": "onClick={() => {\r\n                        setShowVehicleDialog(false);\r\n                        setShowDeleteDialog(true);\r\n                      }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\VehiclesManagement.jsx",
        "line": 949,
        "code": "onClick={() => setShowVehicleDialog(false)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\admin\\VehiclesManagement.jsx",
        "line": 976,
        "code": "onClick={() => setShowRejectDialog(false)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\auth\\ForgotPassword.jsx",
        "line": 26,
        "code": "useEffect(() => {\r\n    if (user && !loading) {\r\n      navigate(createPageUrl('Home')",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\auth\\ForgotPassword.jsx",
        "line": 33,
        "code": "useEffect(() => {\r\n    if (location.state?.email) {\r\n      setEmail(location.state.email)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\auth\\ForgotPassword.jsx",
        "line": 40,
        "code": "useEffect(() => {\r\n    let timer;\r\n    if (countdown > 0) {\r\n      timer = setTimeout(() => setCountdown(countdown - 1)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\auth\\Login.jsx",
        "line": 36,
        "code": "useEffect(()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\auth\\Login.jsx",
        "line": 49,
        "code": "useEffect(() => {\r\n    const urlParams = new URLSearchParams(location.search);\r\n    const message = urlParams.get('message');\r\n    const type = urlParams.get('type');\r\n    \r\n    if (message && type === 'success') {\r\n      setSuccess(decodeURIComponent(message))",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\auth\\Login.jsx",
        "line": 24,
        "code": "useState({\r\n    email: '',\r\n    password: ''\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\auth\\Login.jsx",
        "line": 37,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\pages\\auth\\Login.jsx",
        "line": 37,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\pages\\auth\\Login.jsx",
        "line": 37,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\pages\\auth\\Login.jsx",
        "line": 37,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\pages\\auth\\Login.jsx",
        "line": 37,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\pages\\auth\\Login.jsx",
        "line": 37,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\pages\\auth\\Login.jsx",
        "line": 255,
        "code": "onClick={() => setShowPassword(!showPassword)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\auth\\ResetPassword.jsx",
        "line": 41,
        "code": "useEffect(() => {\r\n    const checkResetToken = async () => {\r\n      const urlParams = new URLSearchParams(location.search);\r\n      const accessToken = urlParams.get('access_token');\r\n      const refreshToken = urlParams.get('refresh_token');\r\n      const type = urlParams.get('type');\r\n      \r\n      if (type === 'recovery' && accessToken && refreshToken)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\auth\\ResetPassword.jsx",
        "line": 78,
        "code": "useEffect(() => {\r\n    if (user && !loading && isValidToken === false) {\r\n      navigate(createPageUrl('Home')",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\auth\\ResetPassword.jsx",
        "line": 41,
        "code": "useEffect(()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\auth\\ResetPassword.jsx",
        "line": 20,
        "code": "useState({\r\n    password: '',\r\n    confirmPassword: ''\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\auth\\ResetPassword.jsx",
        "line": 32,
        "code": "useState({\r\n    length: false,\r\n    uppercase: false,\r\n    lowercase: false,\r\n    number: false,\r\n    special: false\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\auth\\ResetPassword.jsx",
        "line": 207,
        "code": "onClick={() => navigate(createPageUrl('ForgotPassword'))}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\auth\\ResetPassword.jsx",
        "line": 214,
        "code": "onClick={() => navigate(createPageUrl('Login'))}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\auth\\ResetPassword.jsx",
        "line": 304,
        "code": "onClick={() => setShowPassword(!showPassword)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\auth\\ResetPassword.jsx",
        "line": 364,
        "code": "onClick={() => setShowConfirmPassword(!showConfirmPassword)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\auth\\Signup.jsx",
        "line": 48,
        "code": "useEffect(() => {\r\n    if (user && !loading) {\r\n      navigate(createPageUrl('Home')",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\auth\\Signup.jsx",
        "line": 48,
        "code": "useEffect(()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\auth\\Signup.jsx",
        "line": 24,
        "code": "useState({\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    fullName: '',\r\n    phone: ''\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\auth\\Signup.jsx",
        "line": 38,
        "code": "useState({\r\n    length: false,\r\n    uppercase: false,\r\n    lowercase: false,\r\n    number: false,\r\n    special: false\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\auth\\Signup.jsx",
        "line": 337,
        "code": "onClick={() => setShowPassword(!showPassword)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\auth\\Signup.jsx",
        "line": 370,
        "code": "onClick={() => setShowConfirmPassword(!showConfirmPassword)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\BuyerRequest.jsx",
        "line": 32,
        "code": "useEffect(() => {\n    // Check authentication when auth loading is complete\n    if (!authLoading && !user) {\n      alert(\"עליך להיות מחובר כדי לשלוח בקשת קונה.\");\n      navigate(createPageUrl(\"Home\"))",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\BuyerRequest.jsx",
        "line": 18,
        "code": "useState({\n    buyer_name: \"\",\n    buyer_phone: \"\",\n    // buyer_email: \"\", // Removed as per requirements\n    vehicle_type: \"\",\n    preferred_manufacturer: \"\",\n    max_budget: \"\",\n    min_year: \"\",\n    max_kilometers: \"\",\n    preferred_location: \"\",\n    additional_requirements: \"\",\n    urgency: \"\"\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\Checkout.jsx",
        "line": 21,
        "code": "useEffect(() => {\n    const loadData = async () => {\n      // Wait for auth to load\n      if (authLoading) return;\n      \n      // Check authentication\n      if (!user) {\n        alert(\"עליך להיות מחובר כדי לבצע תשלום.\");\n        navigate(createPageUrl(\"Home\"));\n        return;\n      }\n\n      // Get vehicle ID from URL\n      const urlParams = new URLSearchParams(window.location.search);\n      const vehicleId = urlParams.get('vehicleId');\n\n      if (!vehicleId) {\n        navigate(createPageUrl('Home'));\n        return;\n      }\n\n      // Load vehicle data\n      try {\n        const vehicleResponse = await Vehicle.filter({ id: vehicleId });\n        \n        if (!vehicleResponse || vehicleResponse.length === 0) {\n          console.error(\"Vehicle not found for checkout.\");\n          alert('הרכב לא נמצא. אנא נסה שוב.');\n          navigate(createPageUrl('Home'));\n          return;\n        }\n        \n        const foundVehicle = vehicleResponse[0];\n\n        // Check if user owns this vehicle\n        if (foundVehicle.created_by !== user.id) {\n          navigate(createPageUrl('Home'));\n          return;\n        }\n\n        setVehicle(foundVehicle);\n      } catch (error)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\Checkout.jsx",
        "line": 249,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\Checkout.jsx",
        "line": 296,
        "code": "onClick={() => setSelectedPaymentMethod('credit_card')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\Checkout.jsx",
        "line": 326,
        "code": "onClick={() => setSelectedPaymentMethod('bit')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\Checkout.jsx",
        "line": 384,
        "code": "onClick={() => navigate(createPageUrl('MyListings'))}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\Contact.jsx",
        "line": 11,
        "code": "useState({\n    name: '',\n    email: '',\n    phone: '',\n    subject: '',\n    category: '',\n    message: ''\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\Contact.jsx",
        "line": 10,
        "code": "function Contact() {\n  const [formData, setFormData] = useState",
        "severity": "medium",
        "description": "Function component not using React.memo may re-render unnecessarily",
        "fix": "Wrap component with React.memo if props are stable"
      },
      {
        "file": "src\\pages\\Contact.jsx",
        "line": 79,
        "code": "onClick={() => window.location.href = '/'}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminAdManagementPage.jsx",
        "line": 404,
        "code": "useEffect(() => {\r\n    let filtered = ads;\r\n\r\n    // Search filter\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(ad =>\r\n        ad.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        ad.make.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        ad.model.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        ad.user.full_name.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Status filter\r\n    if (selectedStatus !== 'all') {\r\n      filtered = filtered.filter(ad => ad.status === selectedStatus);\r\n    }\r\n\r\n    // Make filter\r\n    if (selectedMake !== 'all') {\r\n      filtered = filtered.filter(ad => ad.make === selectedMake);\r\n    }\r\n\r\n    setFilteredAds(filtered)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminAdManagementPage.jsx",
        "line": 400,
        "code": "useState({ isOpen: false, type: null })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminAdManagementPage.jsx",
        "line": 393,
        "code": "function AdminAdManagementPage() {\r\n  const [ads, setAds] = useState(mockAds);\r\n  const [filteredAds, setFilteredAds] = useState(mockAds);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedStatus, setSelectedStatus] = useState('all');\r\n  const [selectedMake, setSelectedMake] = useState('all');\r\n  const [selectedAd, setSelectedAd] = useState(null);\r\n  const [approvalDialog, setApprovalDialog] = useState",
        "severity": "medium",
        "description": "Function component not using React.memo may re-render unnecessarily",
        "fix": "Wrap component with React.memo if props are stable"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminAdManagementPage.jsx",
        "line": 237,
        "code": "onClick={() => onView(ad)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminAdManagementPage.jsx",
        "line": 243,
        "code": "onClick={() => onApprove(ad)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminAdManagementPage.jsx",
        "line": 247,
        "code": "onClick={() => onReject(ad)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminAdManagementPage.jsx",
        "line": 253,
        "code": "onClick={() => onPromote(ad)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminAdManagementPage.jsx",
        "line": 257,
        "code": "onClick={() => onEdit(ad)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminAdManagementPage.jsx",
        "line": 263,
        "code": "onClick={() => onDelete(ad)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminAnalyticsPage.jsx",
        "line": 261,
        "code": "useEffect(() => {\r\n    loadAnalytics(selectedPeriod)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminDashboardLayout.jsx",
        "line": 76,
        "code": "useEffect(() => {\r\n    if (user && user.email !== 'zometauto@gmail.com' && !isAdmin)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminDashboardLayout.jsx",
        "line": 88,
        "code": "useEffect(() => {\r\n    const loadAdminStats = async () => {\r\n      if (!user || user.email !== 'zometauto@gmail.com')",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminDashboardLayout.jsx",
        "line": 66,
        "code": "useState({\r\n    totalUsers: 0,\r\n    activeUsers: 0,\r\n    totalVehicles: 0,\r\n    pendingVehicles: 0,\r\n    systemAlerts: 0,\r\n    platformHealth: 95\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminDashboardLayout.jsx",
        "line": 440,
        "code": "onClick={() => setIsDarkMode(!isDarkMode)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminHomePage.jsx",
        "line": 320,
        "code": "useEffect(() => {\r\n    loadAdminStats()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminHomePage.jsx",
        "line": 327,
        "code": "useEffect(() => {\r\n    const days = selectedTimeRange === '24h' ? 1 : \r\n                 selectedTimeRange === '7d' ? 7 : \r\n                 selectedTimeRange === '30d' ? 30 : 7;\r\n    setChartData(generateChartData(days))",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminHomePage.jsx",
        "line": 70,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminHomePage.jsx",
        "line": 607,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminHomePage.jsx",
        "line": 128,
        "code": "useCallback(async () => {\r\n    if (!user || user.email !== 'zometauto@gmail.com') return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError(null)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminVehicleManagementPage.jsx",
        "line": 220,
        "code": "useEffect(() => {\r\n    loadVehicles()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminVehicleManagementPage.jsx",
        "line": 52,
        "code": "useState({\r\n    total: 0,\r\n    active: 0,\r\n    pending: 0,\r\n    sold: 0,\r\n    rejected: 0\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminVehicleManagementPage.jsx",
        "line": 517,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminVehicleManagementPage.jsx",
        "line": 433,
        "code": "onClick={() => {\r\n                          setSelectedVehicle(vehicle);\r\n                          setShowVehicleDialog(true);\r\n                        }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminVehicleManagementPage.jsx",
        "line": 448,
        "code": "onClick={() => updateVehicleStatus(vehicle.id, 'למכירה')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminVehicleManagementPage.jsx",
        "line": 457,
        "code": "onClick={() => updateVehicleStatus(vehicle.id, 'rejected')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminVehicleManagementPage.jsx",
        "line": 482,
        "code": "onClick={() => deleteVehicle(vehicle.id)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminVehicleManagementPage.jsx",
        "line": 595,
        "code": "onClick={() => setShowVehicleDialog(false)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AuditLogsPage.jsx",
        "line": 458,
        "code": "useEffect(() => {\r\n    let filtered = logs;\r\n\r\n    // Search filter\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(log =>\r\n        log.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        log.user_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        log.user_email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        log.ip_address.includes(searchTerm)\r\n      );\r\n    }\r\n\r\n    // Severity filter\r\n    if (selectedSeverity !== 'all') {\r\n      filtered = filtered.filter(log => log.severity === selectedSeverity);\r\n    }\r\n\r\n    // Action filter\r\n    if (selectedAction !== 'all') {\r\n      filtered = filtered.filter(log => log.action === selectedAction);\r\n    }\r\n\r\n    // User filter\r\n    if (selectedUser !== 'all') {\r\n      filtered = filtered.filter(log => log.user_id === selectedUser);\r\n    }\r\n\r\n    // Date range filter\r\n    const now = new Date();\r\n    if (dateRange !== 'all') {\r\n      const startDate = new Date();\r\n      switch (dateRange)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AuditLogsPage.jsx",
        "line": 445,
        "code": "function AuditLogsPage() {\r\n  const [logs, setLogs] = useState(mockAuditLogs);\r\n  const [filteredLogs, setFilteredLogs] = useState(mockAuditLogs);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedSeverity, setSelectedSeverity] = useState('all');\r\n  const [selectedAction, setSelectedAction] = useState('all');\r\n  const [selectedUser, setSelectedUser] = useState('all');\r\n  const [dateRange, setDateRange] = useState('today');\r\n  const [selectedLog, setSelectedLog] = useState(null);\r\n  const [isDetailsDialogOpen, setIsDetailsDialogOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState",
        "severity": "medium",
        "description": "Function component not using React.memo may re-render unnecessarily",
        "fix": "Wrap component with React.memo if props are stable"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AuditLogsPage.jsx",
        "line": 294,
        "code": "onClick={() => onViewDetails(log)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\PromotionManagementPage.jsx",
        "line": 475,
        "code": "useState({\r\n    title: '',\r\n    description: '',\r\n    type: 'featured',\r\n    price: '',\r\n    duration_days: '',\r\n    features: []\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\PromotionManagementPage.jsx",
        "line": 253,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\PromotionManagementPage.jsx",
        "line": 593,
        "code": "function PromotionManagementPage() {\r\n  const [promotions, setPromotions] = useState(mockPromotions);\r\n  const [campaigns, setCampaigns] = useState(mockCampaigns);\r\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedStatus, setSelectedStatus] = useState('all');\r\n  const [isLoading, setIsLoading] = useState",
        "severity": "medium",
        "description": "Function component not using React.memo may re-render unnecessarily",
        "fix": "Wrap component with React.memo if props are stable"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\PromotionManagementPage.jsx",
        "line": 278,
        "code": "onClick={() => onViewCampaigns(promotion)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\PromotionManagementPage.jsx",
        "line": 287,
        "code": "onClick={() => onEdit(promotion)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\PromotionManagementPage.jsx",
        "line": 294,
        "code": "onClick={() => onToggle(promotion)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\PromotionManagementPage.jsx",
        "line": 301,
        "code": "onClick={() => onDelete(promotion)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\PromotionManagementPage.jsx",
        "line": 428,
        "code": "onClick={() => onPause(campaign)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\PromotionManagementPage.jsx",
        "line": 437,
        "code": "onClick={() => onStop(campaign)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\PromotionManagementPage.jsx",
        "line": 451,
        "code": "onClick={() => onResume(campaign)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\PromotionManagementPage.jsx",
        "line": 437,
        "code": "onClick={() => onStop(campaign)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\PromotionManagementPage.jsx",
        "line": 705,
        "code": "onClick={() => setIsCreateDialogOpen(true)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\SystemSettingsPage.jsx",
        "line": 158,
        "code": "useEffect(() => {\r\n    loadSettings()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\SystemSettingsPage.jsx",
        "line": 36,
        "code": "useState({\r\n    // General settings\r\n    siteName: 'זומט - מערכת ניהול רכב',\r\n    siteDescription: 'פלטפורמה מתקדמת לקנייה ומכירה של רכבים',\r\n    contactEmail: 'zometauto@gmail.com',\r\n    supportPhone: '',\r\n    \r\n    // Feature flags\r\n    enableRegistration: true,\r\n    enableVehicleApproval: true,\r\n    enablePromotions: true,\r\n    enableNotifications: true,\r\n    enableAnalytics: true,\r\n    \r\n    // Email settings\r\n    emailNotifications: true,\r\n    welcomeEmailEnabled: true,\r\n    promotionalEmails: false,\r\n    \r\n    // System settings\r\n    maxVehicleImages: 10,\r\n    maxVehiclePrice: 10000000,\r\n    minVehiclePrice: 1000,\r\n    autoApproveVehicles: false,\r\n    \r\n    // UI settings\r\n    maintenanceMode: false,\r\n    showBetaFeatures: false,\r\n    enableDarkMode: false\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\UserManagementPage.jsx",
        "line": 178,
        "code": "useEffect(() => {\r\n    loadUsers()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\UserManagementPage.jsx",
        "line": 76,
        "code": "useState({\r\n    total: 0,\r\n    active: 0,\r\n    inactive: 0,\r\n    verified: 0,\r\n    unverified: 0,\r\n    admins: 0,\r\n    newToday: 0,\r\n    newThisWeek: 0,\r\n    growth: 0,\r\n    retention: 0\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\UserManagementPage.jsx",
        "line": 90,
        "code": "useCallback(async () => {\r\n    if (!user || user.email !== 'zometauto@gmail.com') return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      \r\n      let query = supabase\r\n        .from('users')\r\n        .select('*');\r\n\r\n      // Apply filters\r\n      if (statusFilter !== 'all')",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\UserManagementPage.jsx",
        "line": 519,
        "code": "onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\UserManagementPage.jsx",
        "line": 641,
        "code": "onClick={() => setSelectedUser(userData)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\UserManagementPage.jsx",
        "line": 646,
        "code": "onClick={() => setShowUserDialog(true)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\UserManagementPage.jsx",
        "line": 654,
        "code": "onClick={() => toggleUserStatus(userData.id, userData.is_active)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\UserManagementPage.jsx",
        "line": 671,
        "code": "onClick={() => updateUserRole(userData.id, userData.role === 'user' ? 'moderator' : 'user')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\UserManagementPage.jsx",
        "line": 682,
        "code": "onClick={() => {\r\n                                setUserToDelete(userData);\r\n                                setShowDeleteDialog(true);\r\n                              }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\UserManagementPage.jsx",
        "line": 711,
        "code": "onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\UserManagementPage.jsx",
        "line": 724,
        "code": "onClick={() => setCurrentPage(pageNum)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\UserManagementPage.jsx",
        "line": 734,
        "code": "onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\UserManagementPage.jsx",
        "line": 857,
        "code": "onClick={() => setSelectedUser(null)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\UserManagementPage.jsx",
        "line": 860,
        "code": "onClick={() => {\r\n                setShowUserDialog(true);\r\n                setSelectedUser(null);\r\n              }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\UserManagementPage.jsx",
        "line": 887,
        "code": "onClick={() => userToDelete && deleteUser(userToDelete.id)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\user\\ActivityPage.jsx",
        "line": 99,
        "code": "useEffect(() => {\r\n    loadActivities()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\user\\ActivityPage.jsx",
        "line": 104,
        "code": "useEffect(() => {\r\n    let filtered = [...activities];\r\n\r\n    // Apply search filter\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(activity =>\r\n        activity.action?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        activity.resource_type?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        JSON.stringify(activity.details || {}).toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Apply action filter\r\n    if (actionFilter !== 'all') {\r\n      filtered = filtered.filter(activity => activity.action === actionFilter);\r\n    }\r\n\r\n    setFilteredActivities(filtered)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\user\\ActivityPage.jsx",
        "line": 49,
        "code": "useState({\r\n    from: subDays(new Date(), 30),\r\n    to: new Date()\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\dashboard\\user\\AdManagementPage.jsx",
        "line": 83,
        "code": "useEffect(() => {\r\n    loadAds()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\user\\AdManagementPage.jsx",
        "line": 88,
        "code": "useEffect(() => {\r\n    let filtered = [...ads];\r\n\r\n    // Apply search filter\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(ad =>\r\n        ad.title?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        ad.manufacturer?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        ad.model?.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Apply status filter\r\n    if (statusFilter !== 'all') {\r\n      filtered = filtered.filter(ad => ad.status === statusFilter);\r\n    }\r\n\r\n    setFilteredAds(filtered)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\user\\AdManagementPage.jsx",
        "line": 512,
        "code": "onClick={() => navigate(`/VehicleDetails?id=${ad.id}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\user\\AdManagementPage.jsx",
        "line": 521,
        "code": "onClick={() => navigate(`/AddVehicle?edit=${ad.id}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\user\\AdManagementPage.jsx",
        "line": 530,
        "code": "onClick={() => handleDuplicateAd(ad)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\user\\AdManagementPage.jsx",
        "line": 543,
        "code": "onClick={() => handleUpdateStatus(ad.id, 'draft')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\user\\AdManagementPage.jsx",
        "line": 552,
        "code": "onClick={() => handleUpdateStatus(ad.id, 'למכירה')}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\user\\AdManagementPage.jsx",
        "line": 564,
        "code": "onClick={() => setSelectedAd(ad)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\user\\AdManagementPage.jsx",
        "line": 580,
        "code": "onClick={() => setSelectedAd(null)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\user\\AdManagementPage.jsx",
        "line": 584,
        "code": "onClick={() => handleDeleteAd(selectedAd?.id)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\user\\AnalyticsPage.jsx",
        "line": 181,
        "code": "useEffect(() => {\r\n    loadAnalytics()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\user\\AnalyticsPage.jsx",
        "line": 65,
        "code": "useState({\r\n    from: subDays(new Date(), 30),\r\n    to: new Date()\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\dashboard\\user\\DashboardHome.jsx",
        "line": 44,
        "code": "useEffect(() => {\r\n    const loadStats = async () => {\r\n      if (!user) return;\r\n      \r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        // Get user's vehicle stats\r\n        const vehicleResponse = await vehicleService.getByUser(user.id);\r\n        const vehicles = vehicleResponse || [];\r\n        \r\n        // Get message stats\r\n        const messageResponse = await messagingService.getMessageStats()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\user\\DashboardHome.jsx",
        "line": 30,
        "code": "useState({\r\n    totalAds: 0,\r\n    activeAds: 0,\r\n    views: 0,\r\n    messages: 0,\r\n    todayViews: 0,\r\n    weekViews: 0,\r\n    recentActivity: []\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\dashboard\\user\\DashboardHome.jsx",
        "line": 144,
        "code": "onClick={() => window.location.reload()}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\user\\DashboardLayout.jsx",
        "line": 88,
        "code": "useEffect(() => {\r\n    const loadDashboardStats = async () => {\r\n      if (!user) return;\r\n      \r\n      try {\r\n        // Get user's vehicle stats\r\n        const vehicleResponse = await vehicleService.getByUser(user.id);\r\n        const vehicles = vehicleResponse || [];\r\n        \r\n        // Get message stats\r\n        const messageResponse = await messagingService.getMessageStats()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\user\\DashboardLayout.jsx",
        "line": 51,
        "code": "useState({\r\n    unreadMessages: 0,\r\n    activeAds: 0,\r\n    totalViews: 0\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\dashboard\\user\\MessagingPage.jsx",
        "line": 137,
        "code": "useEffect(() => {\r\n    loadMessages()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\user\\MessagingPage.jsx",
        "line": 142,
        "code": "useEffect(() => {\r\n    scrollToBottom()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\user\\MessagingPage.jsx",
        "line": 448,
        "code": "onClick={() => setSelectedConversation(conversation)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\user\\MessagingPage.jsx",
        "line": 504,
        "code": "onClick={() => setSelectedConversation(null)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\user\\MessagingPage.jsx",
        "line": 674,
        "code": "onClick={() => markAsRead(notification.id)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\user\\MessagingPage.jsx",
        "line": 684,
        "code": "onClick={() => handleDeleteMessage(notification.id)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\user\\ProfilePage.jsx",
        "line": 74,
        "code": "useEffect(() => {\r\n    if (user)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\user\\ProfilePage.jsx",
        "line": 94,
        "code": "useEffect(() => {\r\n    if (passwordForm.newPassword) {\r\n      const validation = validatePasswordStrength(passwordForm.newPassword);\r\n      setPasswordStrength(validation);\r\n    } else {\r\n      setPasswordStrength(null)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\dashboard\\user\\ProfilePage.jsx",
        "line": 38,
        "code": "useState({\r\n    full_name: '',\r\n    phone: '',\r\n    bio: ''\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\dashboard\\user\\ProfilePage.jsx",
        "line": 44,
        "code": "useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: ''\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\dashboard\\user\\ProfilePage.jsx",
        "line": 50,
        "code": "useState({\r\n    email_notifications: true,\r\n    sms_notifications: false,\r\n    marketing_emails: false,\r\n    profile_visibility: 'public'\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\dashboard\\user\\ProfilePage.jsx",
        "line": 58,
        "code": "useState({\r\n    profile: false,\r\n    password: false,\r\n    verification: false\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\dashboard\\user\\ProfilePage.jsx",
        "line": 64,
        "code": "useState({\r\n    current: false,\r\n    new: false,\r\n    confirm: false\r\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\dashboard\\user\\ProfilePage.jsx",
        "line": 449,
        "code": "onClick={() => setShowPasswords(prev => ({ ...prev, current: !prev.current }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\user\\ProfilePage.jsx",
        "line": 471,
        "code": "onClick={() => setShowPasswords(prev => ({ ...prev, new: !prev.new }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\dashboard\\user\\ProfilePage.jsx",
        "line": 532,
        "code": "onClick={() => setShowPasswords(prev => ({ ...prev, confirm: !prev.confirm }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\Financing.jsx",
        "line": 9,
        "code": "function Financing() {\n  const [loanAmount, setLoanAmount] = useState(150000);\n  const [loanTerm, setLoanTerm] = useState",
        "severity": "medium",
        "description": "Function component not using React.memo may re-render unnecessarily",
        "fix": "Wrap component with React.memo if props are stable"
      },
      {
        "file": "src\\pages\\FinancingAndInsurance.jsx",
        "line": 10,
        "code": "function FinancingAndInsurance() {\n  const [loanAmount, setLoanAmount] = useState(150000);\n  const [loanTerm, setLoanTerm] = useState",
        "severity": "medium",
        "description": "Function component not using React.memo may re-render unnecessarily",
        "fix": "Wrap component with React.memo if props are stable"
      },
      {
        "file": "src\\pages\\Home.jsx",
        "line": 67,
        "code": "useEffect(() => {\n    document.title = \"צומת - פלטפורמת הרכב הכבד בישראל\";\n    loadVehicles()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\Home.jsx",
        "line": 49,
        "code": "function Home() {\n  const [vehicles, setVehicles] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [sortBy, setSortBy] = useState(\"-created_date\");\n  const [isAdvancedSearchOpen, setIsAdvancedSearchOpen] = useState(false);\n  const [isBasicSearchOpen, setIsBasicSearchOpen] = useState(false);\n  const [advancedFilters, setAdvancedFilters] = useState(INITIAL_FILTERS);\n  const [basicSearchResults, setBasicSearchResults] = useState([]);\n  const [isBasicSearchActive, setIsBasicSearchActive] = useState",
        "severity": "medium",
        "description": "Function component not using React.memo may re-render unnecessarily",
        "fix": "Wrap component with React.memo if props are stable"
      },
      {
        "file": "src\\pages\\Home.jsx",
        "line": 72,
        "code": "useCallback(async () => {\n    setIsLoading(true)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\pages\\Home.jsx",
        "line": 141,
        "code": "useCallback((newSort) => setSortBy(newSort)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\pages\\Home.jsx",
        "line": 142,
        "code": "useCallback(() => setIsAdvancedSearchOpen(prev => !prev)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\pages\\Home.jsx",
        "line": 143,
        "code": "useCallback(() => setIsBasicSearchOpen(prev => !prev)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\pages\\Home.jsx",
        "line": 146,
        "code": "useCallback((newFilters) => {\n    setAdvancedFilters(newFilters)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\pages\\Home.jsx",
        "line": 153,
        "code": "useCallback((newFilters) => handleAdvancedFiltersChange(newFilters)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\pages\\Home.jsx",
        "line": 155,
        "code": "useCallback((results) => {\n    setBasicSearchResults(results)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\pages\\Home.jsx",
        "line": 163,
        "code": "useCallback((isActive) => {\n    setIsBasicSearchActive(isActive)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\pages\\Home.jsx",
        "line": 171,
        "code": "useCallback((basicFiltersUpdate)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\pages\\Home.jsx",
        "line": 181,
        "code": "useCallback((category)",
        "severity": "medium",
        "description": "useCallback without dependency array",
        "fix": "Add dependency array to useCallback"
      },
      {
        "file": "src\\pages\\Home.jsx",
        "line": 84,
        "code": "useMemo(()",
        "severity": "medium",
        "description": "useMemo without dependency array",
        "fix": "Add dependency array to useMemo"
      },
      {
        "file": "src\\pages\\Home.jsx",
        "line": 213,
        "code": "onClick={() => setAdvancedFilters(INITIAL_FILTERS)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\Home.jsx",
        "line": 250,
        "code": "onClick={() => handleCategoryClick(value)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\Home.jsx",
        "line": 394,
        "code": "onClick={() => {\n              dispatch(accessibilityActions.setFloatingButton(true));\n              dispatch(accessibilityActions.setButtonPermanentlyClosed(false));\n              dispatch(accessibilityActions.setButtonClosed(false));\n              dispatch(accessibilityActions.setButtonMinimized(false));\n            }",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\index.jsx",
        "line": 130,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\pages\\Layout.jsx",
        "line": 29,
        "code": "useEffect(()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\Layout.jsx",
        "line": 27,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\pages\\Layout.jsx",
        "line": 27,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\pages\\MyListings.jsx",
        "line": 92,
        "code": "useEffect(() => {\n    const fetchListings = async () => {\n      if (authLoading) return;\n      \n      if (!user) {\n        toHome()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\MyListings.jsx",
        "line": 58,
        "code": "onClick={() => navigateTo(`${ROUTES.CHECKOUT}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\MyListings.jsx",
        "line": 75,
        "code": "onClick={() => onDelete(vehicle.id)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\PaymentSuccess.jsx",
        "line": 19,
        "code": "useEffect(() => {\n    const loadVehicle = async () => {\n      const params = new URLSearchParams(location.search);\n      const vehicleId = params.get('vehicleId');\n\n      if (!vehicleId) {\n        toHome();\n        return;\n      }\n\n      try {\n        const vehicleResponse = await Vehicle.filter({ id: vehicleId });\n\n        if (vehicleResponse && vehicleResponse.length > 0) {\n          setVehicle(vehicleResponse[0]);\n        } else {\n          console.error(\"Vehicle not found after payment success.\");\n          alert('הרכב לא נמצא. אנא צור קשר עם התמיכה.');\n          toHome();\n        }\n      } catch (error)",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\PaymentSuccess.jsx",
        "line": 12,
        "code": "function PaymentSuccess() {\n  const [vehicle, setVehicle] = useState(null);\n  const [isLoading, setIsLoading] = useState",
        "severity": "medium",
        "description": "Function component not using React.memo may re-render unnecessarily",
        "fix": "Wrap component with React.memo if props are stable"
      },
      {
        "file": "src\\pages\\Pricing.jsx",
        "line": 11,
        "code": "useEffect(() => {\n    loadPlans()",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\Pricing.jsx",
        "line": 8,
        "code": "function Pricing() {\n  const [plans, setPlans] = useState",
        "severity": "medium",
        "description": "Function component not using React.memo may re-render unnecessarily",
        "fix": "Wrap component with React.memo if props are stable"
      },
      {
        "file": "src\\pages\\VehicleDetails.jsx",
        "line": 36,
        "code": "useEffect(() => {\n    const loadData = async () => {\n      // Get vehicle ID from URL\n      const urlParams = new URLSearchParams(window.location.search);\n      const vehicleId = urlParams.get('id');\n\n      if (!vehicleId) {\n        toHome();\n        return;\n      }\n\n      try {\n        // Load vehicle data\n        const vehicleResponse = await Vehicle.filter({ id: vehicleId });\n\n        if (vehicleResponse && vehicleResponse.length > 0) {\n          setVehicle(vehicleResponse[0])",
        "severity": "high",
        "description": "useEffect without dependency array may cause infinite re-renders",
        "fix": "Add dependency array to useEffect: useEffect(() => {}, [])"
      },
      {
        "file": "src\\pages\\VehicleDetails.jsx",
        "line": 190,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\VehicleDetails.jsx",
        "line": 190,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\VehicleDetails.jsx",
        "line": 191,
        "code": "onClick={() => setCurrentImageIndex(index)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\VehicleDetails.jsx",
        "line": 191,
        "code": "onClick={() => setCurrentImageIndex(index)}",
        "severity": "medium",
        "description": "Inline arrow functions in onClick may cause re-renders",
        "fix": "Use useCallback or define function outside render"
      },
      {
        "file": "src\\pages\\VehiclePricing.jsx",
        "line": 11,
        "code": "useState({\n    manufacturer: '',\n    model: '',\n    year: '',\n    kilometers: '',\n    vehicleType: '',\n    condition: '',\n    additionalInfo: ''\n  })",
        "severity": "medium",
        "description": "useState with object may cause unnecessary re-renders",
        "fix": "Use useReducer or separate useState calls for object state"
      },
      {
        "file": "src\\pages\\VehiclePricing.jsx",
        "line": 299,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\VehiclePricing.jsx",
        "line": 299,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\VehiclePricing.jsx",
        "line": 299,
        "code": "key={index}",
        "severity": "high",
        "description": "Using array index as key can cause performance issues",
        "fix": "Use unique, stable identifiers as keys"
      },
      {
        "file": "src\\pages\\VehiclePricing.jsx",
        "line": 10,
        "code": "function VehiclePricing() {\n  const [formData, setFormData] = useState",
        "severity": "medium",
        "description": "Function component not using React.memo may re-render unnecessarily",
        "fix": "Wrap component with React.memo if props are stable"
      },
      {
        "file": "src\\test\\performance\\load-tests.test.jsx",
        "line": 59,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\test\\performance\\load-tests.test.jsx",
        "line": 59,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\test\\performance\\load-tests.test.jsx",
        "line": 59,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\test\\performance\\load-tests.test.jsx",
        "line": 59,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\test\\performance\\load-tests.test.jsx",
        "line": 59,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\test\\performance\\load-tests.test.jsx",
        "line": 59,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\test\\performance\\load-tests.test.jsx",
        "line": 59,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\test\\performance\\load-tests.test.jsx",
        "line": 59,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\test\\performance\\load-tests.test.jsx",
        "line": 59,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\test\\performance\\load-tests.test.jsx",
        "line": 59,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\test\\performance\\load-tests.test.jsx",
        "line": 59,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      },
      {
        "file": "src\\test\\performance\\load-tests.test.jsx",
        "line": 59,
        "code": "console.log(",
        "severity": "low",
        "description": "Console.log statements should be removed in production",
        "fix": "Remove console.log or use proper logging library"
      }
    ],
    "memoryLeaks": [
      {
        "file": "src\\test\\performance\\load-tests.test.jsx",
        "leaks": [
          {
            "type": "timeout",
            "description": "Multiple setTimeout calls without corresponding clearTimeout"
          }
        ]
      }
    ],
    "componentComplexity": [
      {
        "file": "src\\components\\accessibility\\AccessibilityFeatures.jsx",
        "score": 82,
        "factors": [
          "High hook count: 26"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityPanel.jsx",
        "score": 58,
        "factors": [
          "Many conditional renders: 11",
          "High JSX complexity: 61 elements",
          "Many event handlers: 11"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityTester.jsx",
        "score": 66,
        "factors": [
          "Many conditional renders: 14",
          "High JSX complexity: 53 elements"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\components\\accessibility\\AccessibilityToggle.jsx",
        "score": 79,
        "factors": [
          "High JSX complexity: 109 elements",
          "Many event handlers: 44"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "score": 157,
        "factors": [
          "High hook count: 28",
          "Many conditional renders: 16",
          "High JSX complexity: 104 elements",
          "Many event handlers: 27"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\components\\AdvancedSearch.jsx",
        "score": 70,
        "factors": [
          "High hook count: 16",
          "High JSX complexity: 105 elements",
          "Many event handlers: 18"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\components\\auth\\SecurityDashboard.jsx",
        "score": 51,
        "factors": [
          "Many conditional renders: 6",
          "High JSX complexity: 102 elements"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\components\\dashboard\\RealTimeActivityFeed.jsx",
        "score": 59,
        "factors": [
          "High JSX complexity: 53 elements"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\components\\dashboard\\RealTimeStatistics.jsx",
        "score": 56,
        "factors": [
          "Many conditional renders: 8"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\components\\forms\\ValidatedForm.jsx",
        "score": 51,
        "factors": [
          "Many conditional renders: 6",
          "High JSX complexity: 52 elements",
          "Many event handlers: 12"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\components\\forms\\ValidatedInput.jsx",
        "score": 75,
        "factors": [
          "High hook count: 14",
          "Many conditional renders: 6",
          "Many event handlers: 16"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\components\\messaging\\RealTimeMessaging.jsx",
        "score": 104,
        "factors": [
          "High hook count: 18",
          "Many conditional renders: 13",
          "High JSX complexity: 62 elements",
          "Many event handlers: 11"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\components\\notifications\\NotificationPreferences.jsx",
        "score": 63,
        "factors": [
          "High JSX complexity: 104 elements",
          "Many event handlers: 22"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\components\\notifications\\RealTimeNotifications.jsx",
        "score": 76,
        "factors": [
          "High hook count: 13",
          "Many event handlers: 20"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\components\\search\\BasicSearch.jsx",
        "score": 65,
        "factors": [
          "High hook count: 15",
          "High JSX complexity: 79 elements",
          "Many event handlers: 11"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\components\\security\\AccessControl.jsx",
        "score": 62,
        "factors": [
          "Many conditional renders: 6",
          "Many event handlers: 21"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\components\\security\\SecurityMonitor.jsx",
        "score": 86,
        "factors": [
          "High hook count: 12",
          "Many conditional renders: 8",
          "High JSX complexity: 138 elements",
          "Many event handlers: 11"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\components\\ui\\carousel.jsx",
        "score": 60,
        "factors": [
          "High hook count: 15",
          "Many conditional renders: 6"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\components\\ui\\ImageUpload.jsx",
        "score": 66,
        "factors": [
          "High hook count: 15",
          "Many event handlers: 11"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "score": 74,
        "factors": [
          "High hook count: 14",
          "Many conditional renders: 10"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\hooks\\useAuth.jsx",
        "score": 62,
        "factors": [
          "High hook count: 18"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\hooks\\__tests__\\useAuth.test.jsx",
        "score": 53,
        "factors": [
          "High hook count: 24"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\AddVehicle.jsx",
        "score": 141,
        "factors": [
          "High hook count: 15",
          "Many conditional renders: 15",
          "High JSX complexity: 151 elements",
          "Many event handlers: 29",
          "High state count: 11"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\admin\\AdminDashboard.jsx",
        "score": 114,
        "factors": [
          "Many conditional renders: 19",
          "High JSX complexity: 229 elements"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\admin\\AdminLayout.jsx",
        "score": 149,
        "factors": [
          "High hook count: 19",
          "Many conditional renders: 20",
          "High JSX complexity: 221 elements",
          "Many event handlers: 17"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\admin\\Analytics.jsx",
        "score": 76,
        "factors": [
          "Many conditional renders: 6",
          "High JSX complexity: 310 elements"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\admin\\SystemManagement.jsx",
        "score": 103,
        "factors": [
          "High hook count: 15",
          "Many conditional renders: 13",
          "High JSX complexity: 75 elements",
          "High state count: 12"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\admin\\UsersManagement.jsx",
        "score": 149,
        "factors": [
          "High hook count: 12",
          "Many conditional renders: 24",
          "High JSX complexity: 219 elements",
          "Many event handlers: 16"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\admin\\VehiclesManagement.jsx",
        "score": 107,
        "factors": [
          "High hook count: 14",
          "High JSX complexity: 271 elements",
          "Many event handlers: 23",
          "High state count: 10"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\auth\\ForgotPassword.jsx",
        "score": 56,
        "factors": [
          "High hook count: 12",
          "High JSX complexity: 68 elements"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\auth\\Login.jsx",
        "score": 58,
        "factors": [
          "High hook count: 11",
          "High JSX complexity: 63 elements"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\auth\\ResetPassword.jsx",
        "score": 115,
        "factors": [
          "High hook count: 15",
          "Many conditional renders: 17",
          "High JSX complexity: 96 elements",
          "High state count: 9"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\auth\\Signup.jsx",
        "score": 76,
        "factors": [
          "High hook count: 13",
          "High JSX complexity: 88 elements",
          "High state count: 9"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\BuyerRequest.jsx",
        "score": 52,
        "factors": [
          "Many conditional renders: 6",
          "High JSX complexity: 95 elements",
          "Many event handlers: 11"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminAdManagementPage.jsx",
        "score": 126,
        "factors": [
          "Many conditional renders: 10",
          "High JSX complexity: 164 elements",
          "Many event handlers: 42",
          "High state count: 9"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminAnalyticsPage.jsx",
        "score": 80,
        "factors": [
          "Many conditional renders: 10",
          "High JSX complexity: 216 elements"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminDashboardLayout.jsx",
        "score": 123,
        "factors": [
          "Many conditional renders: 27",
          "High JSX complexity: 71 elements"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminHomePage.jsx",
        "score": 129,
        "factors": [
          "High hook count: 14",
          "Many conditional renders: 16",
          "High JSX complexity: 284 elements",
          "High state count: 9"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminVehicleManagementPage.jsx",
        "score": 71,
        "factors": [
          "High hook count: 11",
          "High JSX complexity: 183 elements"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AuditLogsPage.jsx",
        "score": 92,
        "factors": [
          "High hook count: 11",
          "Many conditional renders: 6",
          "High JSX complexity: 183 elements",
          "Many event handlers: 14",
          "High state count: 10"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\PromotionManagementPage.jsx",
        "score": 111,
        "factors": [
          "Many conditional renders: 9",
          "High JSX complexity: 229 elements",
          "Many event handlers: 34"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\SystemSettingsPage.jsx",
        "score": 62,
        "factors": [
          "High JSX complexity: 171 elements",
          "Many event handlers: 21"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\admin\\UserManagementPage.jsx",
        "score": 154,
        "factors": [
          "High hook count: 18",
          "Many conditional renders: 15",
          "High JSX complexity: 263 elements",
          "Many event handlers: 19",
          "High state count: 14"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\user\\ActivityPage.jsx",
        "score": 75,
        "factors": [
          "High hook count: 12",
          "High JSX complexity: 107 elements",
          "Many event handlers: 16"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\user\\AdManagementPage.jsx",
        "score": 96,
        "factors": [
          "High hook count: 16",
          "High JSX complexity: 147 elements",
          "Many event handlers: 16",
          "High state count: 11"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\user\\AnalyticsPage.jsx",
        "score": 75,
        "factors": [
          "Many conditional renders: 7",
          "High JSX complexity: 159 elements"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\user\\DashboardLayout.jsx",
        "score": 55,
        "factors": [
          "Many conditional renders: 8"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\user\\MessagingPage.jsx",
        "score": 143,
        "factors": [
          "High hook count: 16",
          "Many conditional renders: 18",
          "High JSX complexity: 149 elements",
          "Many event handlers: 21",
          "High state count: 11"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\dashboard\\user\\ProfilePage.jsx",
        "score": 133,
        "factors": [
          "High hook count: 11",
          "Many conditional renders: 21",
          "High JSX complexity: 169 elements",
          "Many event handlers: 18"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\Home.jsx",
        "score": 106,
        "factors": [
          "High hook count: 23",
          "Many conditional renders: 8",
          "High JSX complexity: 77 elements",
          "Many event handlers: 13"
        ],
        "recommendation": "Consider refactoring into smaller components"
      },
      {
        "file": "src\\pages\\VehicleDetails.jsx",
        "score": 52,
        "factors": [
          "High JSX complexity: 96 elements"
        ],
        "recommendation": "Consider refactoring into smaller components"
      }
    ],
    "hookOptimizations": [
      {
        "file": "src\\components\\accessibility\\AccessibilityTester.jsx",
        "optimizations": [
          {
            "type": "useEffect",
            "issue": "useEffect with object in dependency array",
            "fix": "Extract object properties or use useMemo for object dependencies"
          }
        ]
      },
      {
        "file": "src\\components\\accessibility\\FloatingAccessibilityButton.jsx",
        "optimizations": [
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useEffect",
            "issue": "useEffect with object in dependency array",
            "fix": "Extract object properties or use useMemo for object dependencies"
          }
        ]
      },
      {
        "file": "src\\components\\AdvancedSearch.jsx",
        "optimizations": [
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          }
        ]
      },
      {
        "file": "src\\components\\dashboard\\RealTimeStatistics.jsx",
        "optimizations": [
          {
            "type": "useEffect",
            "issue": "useEffect with object in dependency array",
            "fix": "Extract object properties or use useMemo for object dependencies"
          }
        ]
      },
      {
        "file": "src\\components\\ErrorBoundary.jsx",
        "optimizations": [
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          }
        ]
      },
      {
        "file": "src\\components\\messaging\\RealTimeMessaging.jsx",
        "optimizations": [
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          }
        ]
      },
      {
        "file": "src\\components\\notifications\\RealTimeNotifications.jsx",
        "optimizations": [
          {
            "type": "useEffect",
            "issue": "useEffect with object in dependency array",
            "fix": "Extract object properties or use useMemo for object dependencies"
          }
        ]
      },
      {
        "file": "src\\components\\search\\BasicSearch.jsx",
        "optimizations": [
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useMemo",
            "issue": "useMemo without dependency array",
            "fix": "Add dependency array to useMemo"
          },
          {
            "type": "useMemo",
            "issue": "useMemo without dependency array",
            "fix": "Add dependency array to useMemo"
          },
          {
            "type": "useEffect",
            "issue": "useEffect with object in dependency array",
            "fix": "Extract object properties or use useMemo for object dependencies"
          }
        ]
      },
      {
        "file": "src\\components\\security\\AccessControl.jsx",
        "optimizations": [
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useMemo",
            "issue": "useMemo without dependency array",
            "fix": "Add dependency array to useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\security\\SecurityMonitor.jsx",
        "optimizations": [
          {
            "type": "useEffect",
            "issue": "useEffect with object in dependency array",
            "fix": "Extract object properties or use useMemo for object dependencies"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\carousel.jsx",
        "optimizations": [
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\chart.jsx",
        "optimizations": [
          {
            "type": "useMemo",
            "issue": "useMemo without dependency array",
            "fix": "Add dependency array to useMemo"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\ImageUpload.jsx",
        "optimizations": [
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          }
        ]
      },
      {
        "file": "src\\components\\ui\\sidebar.jsx",
        "optimizations": [
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useMemo",
            "issue": "useMemo without dependency array",
            "fix": "Add dependency array to useMemo"
          },
          {
            "type": "useMemo",
            "issue": "useMemo without dependency array",
            "fix": "Add dependency array to useMemo"
          }
        ]
      },
      {
        "file": "src\\pages\\AddVehicle.jsx",
        "optimizations": [
          {
            "type": "useEffect",
            "issue": "useEffect with object in dependency array",
            "fix": "Extract object properties or use useMemo for object dependencies"
          }
        ]
      },
      {
        "file": "src\\pages\\admin\\AdminLayout.jsx",
        "optimizations": [
          {
            "type": "useEffect",
            "issue": "useEffect with object in dependency array",
            "fix": "Extract object properties or use useMemo for object dependencies"
          }
        ]
      },
      {
        "file": "src\\pages\\admin\\Analytics.jsx",
        "optimizations": [
          {
            "type": "useEffect",
            "issue": "useEffect with object in dependency array",
            "fix": "Extract object properties or use useMemo for object dependencies"
          }
        ]
      },
      {
        "file": "src\\pages\\admin\\SystemManagement.jsx",
        "optimizations": [
          {
            "type": "useEffect",
            "issue": "useEffect with object in dependency array",
            "fix": "Extract object properties or use useMemo for object dependencies"
          }
        ]
      },
      {
        "file": "src\\pages\\auth\\ResetPassword.jsx",
        "optimizations": [
          {
            "type": "useEffect",
            "issue": "useEffect with object in dependency array",
            "fix": "Extract object properties or use useMemo for object dependencies"
          }
        ]
      },
      {
        "file": "src\\pages\\auth\\Signup.jsx",
        "optimizations": [
          {
            "type": "useEffect",
            "issue": "useEffect with object in dependency array",
            "fix": "Extract object properties or use useMemo for object dependencies"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminAnalyticsPage.jsx",
        "optimizations": [
          {
            "type": "useEffect",
            "issue": "useEffect with object in dependency array",
            "fix": "Extract object properties or use useMemo for object dependencies"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminDashboardLayout.jsx",
        "optimizations": [
          {
            "type": "useEffect",
            "issue": "useEffect with object in dependency array",
            "fix": "Extract object properties or use useMemo for object dependencies"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AdminHomePage.jsx",
        "optimizations": [
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useEffect",
            "issue": "useEffect with object in dependency array",
            "fix": "Extract object properties or use useMemo for object dependencies"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\admin\\AuditLogsPage.jsx",
        "optimizations": [
          {
            "type": "useEffect",
            "issue": "useEffect with object in dependency array",
            "fix": "Extract object properties or use useMemo for object dependencies"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\admin\\PromotionManagementPage.jsx",
        "optimizations": [
          {
            "type": "useEffect",
            "issue": "useEffect with object in dependency array",
            "fix": "Extract object properties or use useMemo for object dependencies"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\admin\\UserManagementPage.jsx",
        "optimizations": [
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\user\\ActivityPage.jsx",
        "optimizations": [
          {
            "type": "useEffect",
            "issue": "useEffect with object in dependency array",
            "fix": "Extract object properties or use useMemo for object dependencies"
          }
        ]
      },
      {
        "file": "src\\pages\\dashboard\\user\\DashboardLayout.jsx",
        "optimizations": [
          {
            "type": "useEffect",
            "issue": "useEffect with object in dependency array",
            "fix": "Extract object properties or use useMemo for object dependencies"
          }
        ]
      },
      {
        "file": "src\\pages\\Home.jsx",
        "optimizations": [
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useCallback",
            "issue": "useCallback without dependency array",
            "fix": "Add dependency array to useCallback"
          },
          {
            "type": "useMemo",
            "issue": "useMemo without dependency array",
            "fix": "Add dependency array to useMemo"
          },
          {
            "type": "useEffect",
            "issue": "useEffect with object in dependency array",
            "fix": "Extract object properties or use useMemo for object dependencies"
          }
        ]
      }
    ]
  },
  "assetOptimization": {
    "unoptimizedImages": [],
    "unusedAssets": [],
    "compressionOpportunities": [],
    "lazyLoadingOpportunities": [],
    "cssOptimizations": [
      {
        "file": "src\\App.css",
        "size": 0,
        "issues": [],
        "optimizations": []
      },
      {
        "file": "src\\index.css",
        "size": 2689,
        "issues": [
          {
            "type": "inefficient-selectors",
            "count": 2,
            "description": "Inefficient CSS selectors found",
            "recommendation": "Optimize CSS selectors for better performance"
          }
        ],
        "optimizations": []
      },
      {
        "file": "src\\styles\\accessibility.css",
        "size": 15344,
        "issues": [
          {
            "type": "unused-selectors",
            "count": 2,
            "description": "Potential unused CSS selectors detected",
            "recommendation": "Use PurgeCSS or similar tool to remove unused styles"
          },
          {
            "type": "duplicate-rules",
            "count": 3,
            "description": "Duplicate CSS rules found",
            "recommendation": "Consolidate duplicate CSS rules"
          },
          {
            "type": "inefficient-selectors",
            "count": 37,
            "description": "Inefficient CSS selectors found",
            "recommendation": "Optimize CSS selectors for better performance"
          }
        ],
        "optimizations": [
          {
            "type": "vendor-prefixes",
            "count": 6,
            "description": "Properties that might need vendor prefixes",
            "recommendation": "Use autoprefixer to add necessary vendor prefixes"
          }
        ]
      },
      {
        "file": "src\\styles\\advanced-accessibility.css",
        "size": 26458,
        "issues": [
          {
            "type": "unused-selectors",
            "count": 3,
            "description": "Potential unused CSS selectors detected",
            "recommendation": "Use PurgeCSS or similar tool to remove unused styles"
          },
          {
            "type": "duplicate-rules",
            "count": 35,
            "description": "Duplicate CSS rules found",
            "recommendation": "Consolidate duplicate CSS rules"
          },
          {
            "type": "inefficient-selectors",
            "count": 51,
            "description": "Inefficient CSS selectors found",
            "recommendation": "Optimize CSS selectors for better performance"
          }
        ],
        "optimizations": [
          {
            "type": "vendor-prefixes",
            "count": 7,
            "description": "Properties that might need vendor prefixes",
            "recommendation": "Use autoprefixer to add necessary vendor prefixes"
          }
        ]
      },
      {
        "file": "src\\styles\\dashboard-minimal.css",
        "size": 8185,
        "issues": [
          {
            "type": "unused-selectors",
            "count": 3,
            "description": "Potential unused CSS selectors detected",
            "recommendation": "Use PurgeCSS or similar tool to remove unused styles"
          },
          {
            "type": "duplicate-rules",
            "count": 11,
            "description": "Duplicate CSS rules found",
            "recommendation": "Consolidate duplicate CSS rules"
          },
          {
            "type": "inefficient-selectors",
            "count": 10,
            "description": "Inefficient CSS selectors found",
            "recommendation": "Optimize CSS selectors for better performance"
          }
        ],
        "optimizations": [
          {
            "type": "vendor-prefixes",
            "count": 7,
            "description": "Properties that might need vendor prefixes",
            "recommendation": "Use autoprefixer to add necessary vendor prefixes"
          }
        ]
      },
      {
        "file": "src\\styles\\navigation-fixes.css",
        "size": 708,
        "issues": [
          {
            "type": "inefficient-selectors",
            "count": 3,
            "description": "Inefficient CSS selectors found",
            "recommendation": "Optimize CSS selectors for better performance"
          }
        ],
        "optimizations": []
      }
    ],
    "fontOptimizations": []
  },
  "buildConfiguration": {
    "viteOptimizations": [
      "Automatic vendor chunk splitting enabled",
      "Manual chunk configuration found",
      "Bundle analyzer configured",
      "Minification configured (terser)",
      "Advanced terser configuration found",
      "Modern JavaScript target configured",
      "CSS code splitting configured",
      "Asset inlining configured",
      "Dependency pre-bundling configured"
    ],
    "rollupOptimizations": [],
    "issues": [],
    "modernFeatures": [
      "Build target: es2020"
    ],
    "compressionSettings": [
      "Compression analysis enabled"
    ]
  },
  "performanceMetrics": {
    "buildTime": 0,
    "bundleGrowth": 0,
    "dependencyCount": 49,
    "codeComplexity": 598
  },
  "overallScore": 0,
  "recommendations": [
    {
      "priority": "high",
      "category": "react",
      "title": "Fix Critical React Performance Issues",
      "description": "Found 142 critical React performance issues",
      "action": "Fix useEffect dependency arrays, optimize re-renders, and implement proper memoization",
      "impact": "High impact on FID and runtime performance",
      "effort": "Medium"
    },
    {
      "priority": "high",
      "category": "react",
      "title": "Fix Memory Leaks",
      "description": "1 potential memory leaks detected",
      "action": "Add proper cleanup in useEffect, clear intervals/timeouts, and remove event listeners",
      "impact": "High impact on long-term performance and stability",
      "effort": "Medium"
    },
    {
      "priority": "high",
      "category": "webvitals",
      "title": "Improve First Input Delay (FID)",
      "description": "FID (3650ms) needs improvement",
      "action": "Reduce JavaScript execution time, implement code splitting, and optimize React components",
      "impact": "High impact on interactivity",
      "effort": "High"
    },
    {
      "priority": "medium",
      "category": "react",
      "title": "Refactor Complex Components",
      "description": "51 components have high complexity scores",
      "action": "Break down large components into smaller, focused components",
      "impact": "Medium impact on maintainability and performance",
      "effort": "High"
    },
    {
      "priority": "medium",
      "category": "assets",
      "title": "Optimize CSS",
      "description": "5 CSS files have optimization opportunities",
      "action": "Remove unused CSS, consolidate duplicate rules, and optimize selectors",
      "impact": "Medium impact on bundle size and render performance",
      "effort": "Medium"
    },
    {
      "priority": "low",
      "category": "monitoring",
      "title": "Implement Performance Monitoring",
      "description": "Add real-time performance monitoring and alerting",
      "action": "Set up Core Web Vitals tracking, error monitoring, and performance budgets",
      "impact": "Low immediate impact, high long-term value",
      "effort": "Medium"
    }
  ],
  "timestamp": "2025-08-22T10:25:17.457Z",
  "version": "2.0.0"
}